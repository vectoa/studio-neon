

Fichier: src/App.jsx
Code:
// src/App.jsx
import React from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';

import Header from './components/HeaderFooter/Header';
import Footer from './components/HeaderFooter/Footer';

import { AuthProvider } from './AuthContext';
import ProtectedRoute from './ProtectedRoute';

import HomePage from './pages/Home/HomePage';
import AdminDashboard from './pages/Admin/AdminDashboard/AdminDashboard';
import AdminLogin from './pages/Admin/AdminLogin/AdminLogin';



import ShopPage from './pages/Shop/ShopPage';
import CustomizeNeonPage from './pages/Customize/CustomizeNeonPage';
import ContactIdeaPage from './pages/ContactIdea/ContactIdeaPage';
import CartPage from './pages/Cart';
import CheckoutPage from './pages/Checkout/CheckoutPage';
import ProductPage from './pages/Product/ProductPage';


import './scss/App.scss';

function App() {
  return (
    <AuthProvider>
      <Router>
      <Header />
        <main>
          <Routes>
            <Route path="/" element={<HomePage />} />
            <Route path="/shop" element={<ShopPage />} />
            <Route path="/customize" element={<CustomizeNeonPage />} />
            <Route path="/contact-idea" element={<ContactIdeaPage />} />
            <Route path="/cart" element={<CartPage />} />
            <Route path="/checkout" element={<CheckoutPage />} />
            <Route path="/product/:id" element={<ProductPage />} />
            

            {/* Page de login admin */}
            <Route path="/admin-login" element={<AdminLogin />} />

            {/* Page admin prot√©g√©e */}
            <Route 
              path="/admin" 
              element={
                <ProtectedRoute>
                  <AdminDashboard />
                </ProtectedRoute>
              }
            />
          </Routes>
        </main>
        <Footer />
      </Router>
    </AuthProvider>
  );
}

export default App;

--------------------

Fichier: src/AuthContext.js
Code:
// src/AuthContext.js
import React, { createContext, useState, useContext } from 'react';
import { ADMIN_PASSWORD } from './secret';

const AuthContext = createContext();

export function AuthProvider({ children }) {
  const [authenticated, setAuthenticated] = useState(false);

  function login(password) {
    if (password === ADMIN_PASSWORD) {
      setAuthenticated(true);
      return true;
    }
    return false;
  }

  function logout() {
    setAuthenticated(false);
  }

  return (
    <AuthContext.Provider value={{ authenticated, login, logout }}>
      {children}
    </AuthContext.Provider>
  );
}

export function useAuth() {
  return useContext(AuthContext);
}

--------------------

Fichier: src/ProtectedRoute.jsx
Code:
// src/ProtectedRoute.jsx
import React from 'react';
import { useAuth } from './AuthContext';
import { Navigate } from 'react-router-dom';

function ProtectedRoute({ children }) {
  const { authenticated } = useAuth();
  if (!authenticated) {
    return <Navigate to="/admin-login" replace />;
  }
  return children;
}

export default ProtectedRoute;

--------------------

Dossier: src/components

Dossier: src/components/BannerHero

Fichier: src/components/BannerHero/BannerHero.jsx
Code:
import React from 'react';
import { useNavigate } from 'react-router-dom';
import './BannerHero.scss';

function BannerHero() {
  const navigate = useNavigate();

  return (
    <section className="banner-hero">
      <div className="banner-content">
        <h2>Sp√©cialiste du N√©on</h2>
        <p>D√©couvrez une collection unique et personnalisez votre n√©on en quelques clics</p>
        <div className="banner-buttons">
          <button onClick={() => navigate('/shop')}>
            D√©couvrir la boutique
          </button>
          <button onClick={() => navigate('/customize')}>
            Cr√©er mon n√©on
          </button>
        </div>
      </div>
    </section>
  );
}

export default BannerHero;

--------------------

Fichier: src/components/BannerHero/BannerHero.scss
Code:
.banner-hero {
  width: 100%;
  height: 400px;
  background-color: black;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  color: white;
  font-family: 'Mali', sans-serif;

  .banner-content {
    background: rgba(0, 0, 0, 0.6);
    padding: 20px;
    border-radius: 10px;
    max-width: 80%;
    display: flex;
    flex-direction: column;
    align-items: center;
    box-shadow:
      0 0 6px 1px #7476ff,
      0 0 12px 3px #7476ff,
      0 0 18px 4px #0408fb;

    h2 {
      font-size: 2.5rem;
      margin-bottom: 10px;
      text-shadow: 0 0 8px #7476ff;
    }

    p {
      font-size: 1.2rem;
      margin-bottom: 15px;
      max-width: 600px;
      text-shadow: 0 0 5px #7476ff;
    }

    .banner-buttons {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 15px;
      margin-top: 15px;

      button {
        width: 100%;
        max-width: 400px;
        padding: 10px 20px;
        background-color: #7476ff;
        border: none;
        color: white;
        cursor: pointer;
        font-size: 1rem;
        border-radius: 8px;
        transition: background 0.3s, transform 0.2s;
        box-shadow:
          0 0 8px #7476ff,
          0 0 16px #0408fb;

        &:hover {
          background-color: #5a5eff;
          transform: scale(1.05);
          box-shadow:
            0 0 12px #7476ff,
            0 0 24px #0408fb;
        }
      }
    }
  }

  // üì± Optimisation mobile
  @media (max-width: 768px) {
    height: auto;
    padding: 40px 20px;

    .banner-content {
      padding: 15px;
      h2 {
        font-size: 2rem;
      }
      p {
        font-size: 1rem;
      }
      .banner-buttons button {
        font-size: 0.9rem;
        width: 100%;
      }
    }
  }
}

--------------------

Fichier: src/components/BannerHero/index.jsx
Code:
import BannerHero from './BannerHero';

// traitement interm√©diaire ou logique sp√©cifique ici

export default BannerHero;

--------------------

Dossier: src/components/Carousel

Fichier: src/components/Carousel/Carousel.jsx
Code:
/**
 * /home/ubuntu/site1/src/components/Carousel/Carousel.jsx
 * Carousel.jsx
 * Composant qui affiche une liste de produits "N√©on" sous forme de carrousel Swiper.
 */

import React, { useEffect, useState } from 'react';
import { Swiper, SwiperSlide } from 'swiper/react';
import { Navigation } from 'swiper/modules';
import { Link } from 'react-router-dom';

// Import Swiper styles
import 'swiper/css';
import 'swiper/css/navigation';

// Import du SCSS sp√©cifique
import './Carousel.scss';

// Service local qui retourne la liste de produits
import { getShopProducts } from '../../services/dataService';

const Carousel = () => {
  const [products, setProducts] = useState([]);

  useEffect(() => {
    const data = getShopProducts();
    if (!data || data.length === 0) {
      console.warn('Aucun produit trouv√© dans dataService. V√©rifiez votre JSON ou API.');
    }
    setProducts(data || []);
  }, []);

  return (
    <section className="carousel-section">
      <h2 className="carousel-title">Nos N√©ons Pr√™ts √† l&apos;Emploi</h2>
      <Swiper
        // Active la navigation (fl√®ches)
        navigation
        // Charge le module Navigation
        modules={[Navigation]}
        // Espace entre les slides
        spaceBetween={20}
        // Nombre de slides visibles par d√©faut
        slidesPerView={3}
        // Breakpoints pour le responsive
        breakpoints={{
          1200: { slidesPerView: 3 },
          992:  { slidesPerView: 2 },
          768:  { slidesPerView: 2 },
          480:  { slidesPerView: 1 },
        }}
      >
        {products.map((product) => (
          <SwiperSlide key={product.id} className="carousel-item">
            <img src={product.image} alt={product.name} />
            <h3>{product.name}</h3>
            <p className="price">{product.price} ‚Ç¨</p>
            <Link to={`/product/${product.id}`} className="buy-btn">
              Acheter
            </Link>
          </SwiperSlide>
        ))}
      </Swiper>
    </section>
  );
};

export default Carousel;

--------------------

Fichier: src/components/Carousel/Carousel.scss
Code:
/* ==========================================================================
   /home/ubuntu/site1/src/components/Carousel/Carousel.scss
   --------------------------------------------------------------------------
   SCSS pour personnaliser le carrousel Swiper et afficher vos produits n√©on.
   Les couleurs, ombres et variables Sass sont conserv√©es pour un style coh√©rent.
   ========================================================================== */

@import '../../scss/_variables';
/* 
      Dans _variables.scss, vous avez :
      $primary-color: #007bff;
      $secondary-color: #f8f9fa;
      $text-color: #333;
      $background-light: #f8f9fa;
      $border-radius: 8px;
      $transition-speed: 0.3s;
   */

/* --------------------------------------------------------------------------
      SECTION : Carrousel principal
      -------------------------------------------------------------------------- */
.carousel-section {
  text-align: center;
  padding: 2rem;
  background: #000;
  /* Fond noir inchang√© */
  font-family: 'Mali', sans-serif;
  color: #fff;

  .carousel-title {
    font-size: 2rem;
    margin-bottom: 1.5rem;
    color: #fff;
    /* Conserve le blanc */
    text-shadow:
      0 0 8px #7476ff,
      /* Effet n√©on violet */
      0 0 16px #0408fb;
    /* Effet n√©on bleu profond */
  }

  .swiper {
    width: 100%;
    padding: 1rem 0;
  }

  /* Chaque slide du carrousel */
  .carousel-item {
    background: rgba(0, 0, 0, 0.8);
    padding: 1rem;
    border-radius: $border-radius;
    box-shadow:
      0 0 6px #7476ff,
      0 0 12px #0408fb;
    transition: transform $transition-speed ease, box-shadow $transition-speed ease;

    img {
      width: 100%;
      max-height: 180px;
      object-fit: cover;
      border-radius: 5px;
      border: 1px solid #7476ff;
    }

    h3 {
      font-size: 1.3rem;
      margin: 0.5rem 0;
      color: #fff;
      text-shadow: 0 0 8px #7476ff;
    }

    .price {
      color: #ffd700;
      font-weight: bold;
      font-size: 1.2rem;
      text-shadow: 0 0 6px #ffd700;
    }

    .buy-btn {
      display: inline-block;
      margin-top: 10px;
      padding: 8px 16px;
      background-color: #7476ff;
      color: #fff;
      text-decoration: none;
      border-radius: 5px;
      cursor: pointer;
      transition: background $transition-speed, transform $transition-speed;
      box-shadow:
        0 0 6px #7476ff,
        0 0 12px #0408fb;

      &:hover {
        background: #0408fb;
        transform: translateY(-3px);
        box-shadow:
          0 0 8px #7476ff,
          0 0 16px #0408fb;
      }
    }

    &:hover {
      transform: translateY(-5px);
      box-shadow:
        0 0 8px #7476ff,
        0 0 16px #0408fb;
    }
  }

  /* ------------------------------------------------------------------------
        RESPONSIVE : Ajustements pour diff√©rentes largeurs d'√©cran
        ------------------------------------------------------------------------ */
  @media (max-width: 1024px) {
    .swiper {
      width: 100%;
    }

    .carousel-item {
      img {
        max-height: 150px;
      }
    }
  }

  @media (max-width: 768px) {
    .carousel-title {
      font-size: 1.8rem;
    }

    .swiper {
      width: 100%;
    }

    .carousel-item {
      img {
        max-height: 120px;
      }

      h3 {
        font-size: 1rem;
      }

      .price {
        font-size: 1rem;
      }

      .buy-btn {
        padding: 8px 12px;
        font-size: 0.9rem;
      }
    }
  }

  @media (max-width: 600px) {
    .carousel-title {
      font-size: 1.5rem;
    }

    .swiper {
      width: 100%;
    }

    .carousel-item {
      img {
        max-height: 130px;
      }
    }
  }
}

/* ==========================================================================
      Personnalisation des fl√®ches de navigation Swiper
      ========================================================================== */

/* On √©crase les variables CSS Swiper pour la taille, etc. */
:root {
  --swiper-navigation-size: 60px;
  /* Taille globale du bouton, plus grande que 44px */
  --swiper-navigation-top-offset: 50%;
  --swiper-navigation-sides-offset: 15px;
  /* D√©calage horizontal un peu plus grand */
  --swiper-navigation-color: #ffffff;
  /* Couleur de la fl√®che */
}

/* Ajuste la taille et le positionnement des boutons de navigation (classes par d√©faut) */
.swiper-button-prev,
.swiper-button-next {
  width: var(--swiper-navigation-size);
  height: var(--swiper-navigation-size);
  top: var(--swiper-navigation-top-offset);
  margin-top: calc(-1 * (var(--swiper-navigation-size) / 2));
  left: auto;
  right: auto;
  z-index: 10;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  /* Optionnel : fond derri√®re la fl√®che
        background: rgba(0, 0, 0, 0.3);
        border-radius: 50%;
     */
  transition: transform 0.3s ease, color 0.3s ease;
}

/* Place la fl√®che de gauche */
.swiper-button-prev {
  left: var(--swiper-navigation-sides-offset);
}

/* Place la fl√®che de droite */
.swiper-button-next {
  right: var(--swiper-navigation-sides-offset);
}

/* Ic√¥ne de la fl√®che (pseudo-√©l√©ment) : plus grande et plus √©paisse */
.swiper-button-prev::after,
.swiper-button-next::after {
  font-size: 2.2rem;
  /* L√©g√®rement plus grande */
  font-weight: 900;
  /* Rend la fl√®che plus ‚Äú√©paisse‚Äù */
  color: var(--swiper-navigation-color);
  text-shadow:
    0 0 6px #7476ff,
    0 0 12px #0408fb;
  /* Effet n√©on */
  transition: text-shadow 0.3s ease, color 0.3s ease;
}

/* Au survol : on agrandit et on passe en dor√© */
.swiper-button-prev:hover::after,
.swiper-button-next:hover::after {
  transform: scale(1.2);
  color: #ffd700;
  /* Dor√© pour effet ‚Äúwow‚Äù */
  text-shadow:
    0 0 8px #ffd700,
    0 0 16px #ffd700;
}
--------------------

Fichier: src/components/Carousel/index.jsx
Code:
import Carousel from './Carousel';

// traitement interm√©diaire ou logique sp√©cifique ici

export default Carousel;

--------------------

Dossier: src/components/CarteComponent

Fichier: src/components/CarteComponent/CartPageComponent.jsx
Code:
import React, { useEffect, useState } from 'react';
import './_cart.scss';
import { Link } from 'react-router-dom';
import { loadCart, incrementQuantity, decrementQuantity, removeItem, calculateTotal } from '../../services/cartService';

function CartPageComponent() {
  const [items, setItems] = useState([]);

  useEffect(() => {
    setItems(loadCart());
  }, []);

  const refreshCart = () => setItems(loadCart());

  const handleIncrement = (id) => {
    incrementQuantity(id);
    refreshCart();
  };

  const handleDecrement = (id) => {
    decrementQuantity(id);
    refreshCart();
  };

  const handleRemove = (id) => {
    removeItem(id);
    refreshCart();
  };

  const totalPrice = calculateTotal();

  return (
    <div className="cart-page">
      <div className="cart-header">
        <h2>üõí Votre panier</h2>
        <Link to="/shop">‚Üê Continuer les achats</Link>
      </div>

      {items.length === 0 ? (
        <p className="empty-cart">Votre panier est vide.</p>
      ) : (
        <>
          <div className="cart-table">
            <div className="cart-row cart-header-row">
              <span>Produit</span>
              <span>Quantit√©</span>
              <span>Total</span>
            </div>

            {items.map(item => (
              <div key={item.id} className="cart-row">
                <div className="product-info">
                  <p className="product-name">{item.name}</p>
                  <p className="product-price">{item.price.toFixed(2)} ‚Ç¨</p>
                </div>

                <div className="quantity-control">
                  <button onClick={() => handleDecrement(item.id)}>-</button>
                  <span>{item.quantity}</span>
                  <button onClick={() => handleIncrement(item.id)}>+</button>
                  <button className="remove-item" onClick={() => handleRemove(item.id)}>üóëÔ∏è</button>
                </div>

                <div className="product-total">
                  {(item.price * item.quantity).toFixed(2)} ‚Ç¨
                </div>
              </div>
            ))}
          </div>

          <div className="cart-summary">
            <p>Total estim√© : <span>{totalPrice.toFixed(2)} ‚Ç¨</span></p>
            <p className="small-note">Taxes incluses. Rabais et frais de port calcul√©s lors du paiement.</p>
            <button className="checkout-btn">Valider la commande</button>
          </div>
        </>
      )}
    </div>
  );
}

export default CartPageComponent;

--------------------

Fichier: src/components/CarteComponent/_cart.scss
Code:
// src/scss/_cart.scss

.cart-page {
  max-width: 900px;
  margin: 40px auto;
  padding: 30px;
  background-color: #000;
  color: #fff;
  font-family: 'Mali', sans-serif;
  border-radius: 12px;
  box-shadow:
    0 0 8px #7476ff,
    0 0 15px #0408fb,
    inset 0 0 5px #0408fb;

  .cart-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 25px;

    h2 {
      font-size: 2rem;
      text-shadow: 0 0 10px #7476ff;
    }

    a {
      color: #7476ff;
      transition: color 0.3s;
      &:hover {
        color: #FFD700;
      }
    }
  }

  .cart-table {
    border-top: 2px solid #7476ff;
    border-bottom: 2px solid #7476ff;

    .cart-row {
      display: grid;
      grid-template-columns: 2fr 1fr 1fr;
      padding: 15px 0;
      align-items: center;
      border-bottom: 1px solid rgba(116,118,255,0.3);

      &.cart-header-row {
        font-size: 0.9rem;
        opacity: 0.8;
      }

      .product-info {
        .product-name {
          font-weight: bold;
          color: #FFD700;
          text-shadow: 0 0 5px #FFD700;
        }

        .product-price {
          opacity: 0.7;
        }
      }

      .quantity-control {
        display: flex;
        align-items: center;
        gap: 8px;

        button {
          width: 30px;
          height: 30px;
          border: 1px solid #7476ff;
          background: transparent;
          border-radius: 50%;
          color: #fff;
          cursor: pointer;
          transition: background 0.3s, box-shadow 0.3s;

          &:hover {
            background: #7476ff;
            box-shadow: 0 0 10px #7476ff;
          }
        }

        .remove-item {
          border: none;
          background: transparent;
          font-size: 1.2rem;
          cursor: pointer;
          transition: color 0.3s;

          &:hover {
            color: #ff4242;
          }
        }
      }

      .product-total {
        text-align: right;
        font-weight: bold;
        color: #FFD700;
      }
    }
  }

  .cart-summary {
    text-align: right;
    margin-top: 20px;

    p {
      font-size: 1.2rem;
      font-weight: bold;
      margin-bottom: 10px;

      span {
        color: #FFD700;
        text-shadow: 0 0 5px #FFD700;
      }
    }

    .small-note {
      font-size: 0.9rem;
      opacity: 0.7;
      margin-bottom: 20px;
    }

    .checkout-btn {
      background-color: #7476ff;
      color: #fff;
      border: none;
      padding: 10px 20px;
      border-radius: 25px;
      cursor: pointer;
      font-size: 1rem;
      transition: all 0.3s;

      &:hover {
        background-color: #0408fb;
        box-shadow: 0 0 10px #0408fb, 0 0 20px #0408fb;
      }
    }
  }

  .empty-cart {
    text-align: center;
    font-size: 1.2rem;
    color: #7476ff;
    text-shadow: 0 0 8px #7476ff;
  }
}

// ‚úÖ Responsive t√©l√©phone
@media (max-width: 600px) {
  .cart-page {
    padding: 15px;
    width: 95%;

    .cart-row {
      grid-template-columns: 1fr;
      gap: 10px;
      text-align: center;

      .quantity-control {
        justify-content: center;
      }

      .product-total {
        text-align: center;
      }
    }

    .cart-summary {
      text-align: center;
      .checkout-btn {
        width: 100%;
      }
    }
  }
}

--------------------

Fichier: src/components/CarteComponent/index.jsx
Code:
import CartPageComponent from './CartPageComponent';

// traitement interm√©diaire ou logique sp√©cifique ici

export default CartPageComponent;

--------------------

Dossier: src/components/Collapsible

Fichier: src/components/Collapsible/CollapsibleRow.jsx
Code:
// site1/src/components/Collapsible/CollapsibleRow.jsx
import React, { useState, useRef, useEffect } from 'react';

function CollapsibleRow({ title, children }) {
  const [open, setOpen] = useState(false);
  const contentRef = useRef(null);
  const [maxHeight, setMaxHeight] = useState('0px');

  useEffect(() => {
    setMaxHeight(open ? `${contentRef.current.scrollHeight}px` : '0px');
  }, [open, children]);

  return (
    <div className={`studio-collapsible-row ${open ? "open" : ""}`} onClick={() => setOpen(!open)}>
      <div className="studio-collapsible-header">
        <span className="studio-collapsible-icon">{open ? '‚úîÔ∏è' : '‚òê'}</span>
        <span className="studio-collapsible-title">{title}</span>
        <span className={`studio-arrow ${open ? "open" : ""}`} style={{ transform: open ? 'rotate(180deg)' : 'rotate(0deg)' }}>‚ñº</span>
      </div>
      <div
        ref={contentRef}
        className={`studio-collapsible-content ${open ? "open" : ""}`}
        style={{ maxHeight: maxHeight }}
      >
        {children}
      </div>
    </div>
  );
}

export default CollapsibleRow;

--------------------

Fichier: src/components/Collapsible/CollapsibleRows.jsx
Code:
// site1/src/components/Collapsible/CollapsibleRows.jsx
import React from 'react';
import CollapsibleRow from './CollapsibleRow';
import './_collapsible.scss';

function CollapsibleRows() {
  return (
    <section className="studio-collapsible-section">
      <h2>Questions Fr√©quentes</h2>
      <CollapsibleRow title="Pourquoi choisir nos n√©ons ?">
        <ul>
          <li>Fabrication de haute qualit√© avec mat√©riaux durables.</li>
          <li>Garantie 1 an incluse.</li>
          <li>Service client r√©actif et attentif.</li>
        </ul>
      </CollapsibleRow>
      <CollapsibleRow title="Quelles tailles et couleurs disponibles ?">
        <ul>
          <li>Tailles : de 50 cm √† 300 cm.</li>
          <li>Couleurs : 14 options vibrantes adapt√©es √† tous les styles.</li>
        </ul>
      </CollapsibleRow>
      <CollapsibleRow title="Quels sont les d√©lais de livraison ?">
        <ul>
          <li>Production rapide : 4 √† 6 jours ouvr√©s.</li>
          <li>Livraison en France sous 7 √† 13 jours.</li>
        </ul>
      </CollapsibleRow>
      <CollapsibleRow title="Que faire en cas de probl√®me ?">
        <ul>
          <li>Garantie d‚Äôun an contre tout d√©faut.</li>
          <li>Remplacement ou remboursement en cas de dommages √† la livraison.</li>
        </ul>
      </CollapsibleRow>
    </section>
  );
}

export default CollapsibleRows;

--------------------

Fichier: src/components/Collapsible/_collapsible.scss
Code:
.studio-collapsible-section {
  width: 100%;                 // ‚úÖ prend toute la largeur disponible
  max-width: 100%;             // ‚úÖ garantit aucun d√©passement
  margin: 0;                   // ‚úÖ enl√®ve les marges auto
  padding: 40px 20px;          // ‚úÖ ajuste le padding pour une meilleure pr√©sentation
  background-color: #000;      // fond noir complet
  color: #fff;
  font-family: "Mali", sans-serif;
  box-sizing: border-box;

  display: flex;               // ‚úÖ Flexbox pour centrer proprement le contenu
  flex-direction: column;
  align-items: center;
  justify-content: center;

  h2 {
    font-size: 2rem;
    margin-bottom: 30px;
    text-shadow:
      0 0 6px #7476ff,
      0 0 12px #0408fb;
  }

  .studio-collapsible-row {
    width: 100%;               // ‚úÖ occupe toute la largeur
    max-width: 700px;          // ‚úÖ largeur maximale uniquement pour les rang√©es
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    padding: 15px 0;
    cursor: pointer;
    transition: background 0.3s ease;

    &:hover {
      background: rgba(255, 255, 255, 0.05);
    }

    &.open .studio-collapsible-title {
      color: #FFD700;
      text-shadow: 0 0 8px #FFD700;
    }
  }

  .studio-collapsible-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    font-size: 1.1rem;
    color: #fff;

    .studio-collapsible-icon {
      font-size: 1.3rem;
      margin-right: 8px;
    }

    .studio-arrow {
      transition: transform 0.3s;
      font-size: 1.2rem;
    }
  }

  .studio-collapsible-content {
    overflow: hidden;
    transition: max-height 0.5s ease, opacity 0.3s ease;
    opacity: 0;
    max-height: 0;
    padding: 0 10px;
    text-align: left;
    font-size: 1rem;

    &.open {
      opacity: 1;
      padding: 15px 10px;
    }

    ul {
      list-style: none;
      padding-left: 0;
      margin-top: 10px;

      li {
        margin-bottom: 8px;

        &::before {
          content: "‚Ä¢";
          color: #FFD700;
          margin-right: 8px;
          text-shadow: 0 0 8px #FFD700;
        }
      }
    }
  }
}

/* Responsive pour mobile */
@media (max-width: 768px) {
  .studio-collapsible-section {
    padding: 20px 10px;

    h2 {
      font-size: 1.6rem;
    }
  }
}

--------------------

Fichier: src/components/Collapsible/index.jsx
Code:
import Collapsible from './CollapsibleRow';

// traitement interm√©diaire ou logique sp√©cifique ici

export default Collapsible;

--------------------

Dossier: src/components/ContactIdeaComponent

Fichier: src/components/ContactIdeaComponent/ContactIdeaComponent.jsx
Code:
// src/components/IdeaComponent/ContactIdeaComponent.jsx
import React, { useState } from 'react';
import './Idea.scss';

/**
 * Composant pour la soumission d'une id√©e/projet.
 * Ce composant collecte et valide les informations saisies par l'utilisateur
 * avant de les envoyer vers une API ou un stockage local (en mode test).
 */
function ContactIdeaComponent() {
  // √âtats pour les champs du formulaire
  const [firstName, setFirstName] = useState('');  // Pr√©nom de l'utilisateur
  const [name, setName] = useState('');            // Nom de l'utilisateur
  const [email, setEmail] = useState('');
  const [phone, setPhone] = useState('');
  const [idea, setIdea] = useState('');
  const [file, setFile] = useState(null);

  // √âtats pour la gestion des retours utilisateur
  const [error, setError] = useState('');
  const [success, setSuccess] = useState('');

  // Fonction de sanitisation simple (suppression des espaces superflus)
  const sanitizeInput = (input) => input.trim();

  /**
   * Validation du num√©ro de t√©l√©phone pour les formats fran√ßais.
   * Autorise :
   * - "+33" (avec ou sans espace) suivi de 9 chiffres,
   * - ou "0" suivi de 9 chiffres.
   */
  const validatePhone = (phoneValue) => {
    const phoneRegex = /^(\+33\s?\d{9}|0\d{9})$/;
    return phoneRegex.test(phoneValue);
  };

  // Gestion de la soumission du formulaire
  const handleSubmit = async (e) => {
    e.preventDefault();
    setError('');
    setSuccess('');

    // Sanitisation des entr√©es utilisateur
    const sanitizedFirstName = sanitizeInput(firstName);
    const sanitizedName = sanitizeInput(name);
    const sanitizedEmail = sanitizeInput(email);
    const sanitizedPhone = sanitizeInput(phone);
    const sanitizedIdea = sanitizeInput(idea);

    // Validation du num√©ro de t√©l√©phone
    if (!validatePhone(sanitizedPhone)) {
      setError("Veuillez saisir un num√©ro de t√©l√©phone valide (ex: +33 63456789 ou 0634567890).");
      return;
    }

    // Exemple d'envoi vers une API s√©curis√©e ou stockage local
    try {
      // Si on  a un backend, il faut le d√©commenter et l'adapter :
      /*
      const response = await fetch('http://localhost:3000/api/submitIdea', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          firstName: sanitizedFirstName,
          name: sanitizedName,
          email: sanitizedEmail,
          phone: sanitizedPhone,
          idea: sanitizedIdea,
          file: file ? file.name : 'aucun'
        }),
      });
      if (!response.ok) {
        throw new Error('Erreur lors de l\'envoi du projet.');
      }
      */

      // En mode test : on affiche dans la console
      console.log("Donn√©es soumises :", {
        firstName: sanitizedFirstName,
        name: sanitizedName,
        email: sanitizedEmail,
        phone: sanitizedPhone,
        idea: sanitizedIdea,
        file: file ? file.name : 'aucun'
      });

      // Message de succ√®s
      setSuccess("Votre projet a √©t√© envoy√© avec succ√®s !");

      // R√©initialisation du formulaire
      setFirstName('');
      setName('');
      setEmail('');
      setPhone('');
      setIdea('');
      setFile(null);

    } catch (err) {
      setError("Une erreur s'est produite lors de l'envoi du projet. " + err.message);
    }
  };

  return (
    <div className="idea-page">
      <h2>Envoyez-nous votre id√©e/projet</h2>

      {/* Affichage des messages d'erreur et de succ√®s */}
      {error && <div className="error-message">{error}</div>}
      {success && <div className="success-message">{success}</div>}

      <form className="idea-form" onSubmit={handleSubmit}>
        <label>Pr√©nom</label>
        <input
          type="text"
          value={firstName}
          onChange={(e) => setFirstName(e.target.value)}
          required
        />

        <label>Nom</label>
        <input
          type="text"
          value={name}
          onChange={(e) => setName(e.target.value)}
          required
        />

        <label>Email</label>
        <input
          type="email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          required
          placeholder="email@gmail.com"
        />

        <label>T√©l√©phone</label>
        <input
          type="tel"
          value={phone}
          onChange={(e) => setPhone(e.target.value)}
          required
          placeholder="Format demand√©: +33 63456789"
        />

        <label>Description du projet</label>
        <textarea
          value={idea}
          onChange={(e) => setIdea(e.target.value)}
          rows={4}
          required
        />

        <label>Logo/Photo (optionnel)</label>
        <input
          type="file"
          onChange={(e) => setFile(e.target.files[0])}
          accept="image/*"
        />

        <button type="submit">Envoyer</button>
      </form>
    </div>
  );
}

export default ContactIdeaComponent;

--------------------

Fichier: src/components/ContactIdeaComponent/Idea.scss
Code:
// src/components/IdeaComponent/Idea.scss
.idea-page {
  max-width: 700px;
  margin: 40px auto;
  padding: 20px;
  background-color: #000;
  border-radius: 12px;
  box-shadow:
    0 0 6px #7476ff,
    0 0 12px #7476ff,
    inset 0 0 4px #0408fb;
  color: #fff;
  font-family: 'Mali', sans-serif;

  h2 {
    text-align: center;
    font-size: 2rem;
    text-shadow: 0 0 8px #7476ff;
    margin-bottom: 20px;
  }

  .idea-form {
    display: flex;
    flex-direction: column;
    gap: 15px;

    label {
      font-weight: bold;
      color: #fff;
      text-shadow: 0 0 4px #7476ff;
    }

    input,
    textarea {
      border: 2px solid #7476ff;
      border-radius: 8px;
      padding: 10px;
      background-color: #222;
      color: #fff;
      transition: border-color 0.3s ease, box-shadow 0.3s ease;

      &:focus {
        border-color: #0408fb;
        box-shadow: 0 0 8px #0408fb;
        outline: none;
      }
    }

    input[type="file"] {
      border: none;
      padding: 5px 0;
      background-color: transparent;
    }

    button {
      background-color: #7476ff;
      color: #fff;
      border: none;
      padding: 10px 20px;
      border-radius: 8px;
      cursor: pointer;
      font-size: 1rem;
      transition: transform 0.3s ease, box-shadow 0.3s ease;

      &:hover {
        background-color: #0408fb;
        transform: translateY(-3px);
        box-shadow:
          0 0 10px #0408fb,
          0 0 20px #0408fb;
      }
    }
  }
}

// Responsive pour t√©l√©phone
@media (max-width: 600px) {
  .idea-page {
    max-width: 90%;
    padding: 15px;

    h2 {
      font-size: 1.5rem;
    }

    .idea-form {
      gap: 12px;

      input,
      textarea {
        padding: 8px;
      }

      button {
        width: 100%;
      }
    }
  }
}

--------------------

Fichier: src/components/ContactIdeaComponent/index.jsx
Code:
import ContactIdeaComponent from './ContactIdeaComponent';

// traitement interm√©diaire ou logique sp√©cifique ici

export default ContactIdeaComponent;

--------------------

Dossier: src/components/CustomizeNeonComponent

Fichier: src/components/CustomizeNeonComponent/CustomizeNeonComponent.jsx
Code:
import React, { useState } from 'react';
import { addToCart } from '../../services/cartService';
import './_customize-neon.scss';

function CustomizeNeonComponent() {
  const [size, setSize] = useState('50');
  const [text, setText] = useState('');
  const [font, setFont] = useState('0');
  const [color, setColor] = useState('#FF0000');
  const [panel, setPanel] = useState('0');
  const pricePerChar = 1;

  const computePrice = () => {
    const base = parseFloat(size) + text.length * pricePerChar + parseFloat(font);
    return (panel === '1' ? base * 1.11 : base).toFixed(2);
  };

  const handleAddToCart = () => {
    if (!text) {
      alert('Veuillez entrer un texte pour votre n√©on.');
      return;
    }

    const customNeon = {
      id: `custom-${Date.now()}`, // G√©n√®re un ID unique
      name: `N√©on personnalis√© - "${text}"`,
      price: parseFloat(computePrice()),
      image: `/images/neon-${color}.png`, // Optionnel : image g√©n√©r√©e
      size,
      font,
      color,
      panel,
      quantity: 1,
    };

    addToCart(customNeon);
    alert(`N√©on "${text}" ajout√© au panier !`);
  };

  return (
    <div className="customize-neon">
      <h2>‚ú® Personnalisez Votre N√©on ‚ú®</h2>

      <div className="customize-preview">
        <div
          className="preview-box"
          style={{
            background: panel === '1' ? 'rgba(0,0,0,0.7)' : '#101010',
            border: panel === '1' ? '2px dashed rgba(255,255,255,0.5)' : 'none',
          }}
        >
          <span
            className="preview-text"
            style={{
              color: color,
              fontFamily: font === '10' ? 'Cursive' : 'Helvetica',
              textShadow: `0 0 8px ${color}, 0 0 15px ${color}, 0 0 20px ${color}`,
            }}
          >
            {text || 'Votre n√©on ici'}
          </span>
        </div>
      </div>

      <div className="customize-form">
        <label>Taille</label>
        <select value={size} onChange={(e) => setSize(e.target.value)}>
          <option value="50">50cm (+50‚Ç¨)</option>
          <option value="75">75cm (+75‚Ç¨)</option>
          <option value="100">100cm (+100‚Ç¨)</option>
        </select>

        <label>Texte (max 30 caract√®res)</label>
        <input
          type="text"
          maxLength={30}
          value={text}
          onChange={(e) => setText(e.target.value)}
        />

        <label>Police</label>
        <select value={font} onChange={(e) => setFont(e.target.value)}>
          <option value="0">Helvetica (+0‚Ç¨)</option>
          <option value="10">Cursive (+10‚Ç¨)</option>
        </select>

        <label>Couleur</label>
        <select value={color} onChange={(e) => setColor(e.target.value)}>
          <option value="#FF0000">Rouge</option>
          <option value="#FFC0CB">Rose clair</option>
          <option value="#FFA500">Orange</option>
          <option value="#FFFF00">Jaune</option>
          <option value="#FFD700">Gold</option>
          <option value="#00FF00">Vert</option>
          <option value="#0000FF">Bleu</option>
          <option value="#ADD8E6">Bleu glac√©</option>
          <option value="#800080">Violet</option>
          <option value="#FFFFFF">Blanc froid</option>
          <option value="#F5DEB3">Blanc chaud</option>
        </select>

        <label>Type de Panneau</label>
        <select value={panel} onChange={(e) => setPanel(e.target.value)}>
          <option value="0">Opaque (+0%)</option>
          <option value="1">Transparent (+11%)</option>
        </select>

        <div className="price">
          Prix: {computePrice()} ‚Ç¨
        </div>
        <button onClick={handleAddToCart}>Ajouter au panier</button>
      </div>
    </div>
  );
}

export default CustomizeNeonComponent;

--------------------

Fichier: src/components/CustomizeNeonComponent/_customize-neon.scss
Code:
// src/scss/_customize-neon.scss
.customize-neon {
  max-width: 700px;
  margin: 30px auto;
  padding: 20px;
  background-color: #000;
  color: #fff;
  font-family: 'Mali', sans-serif;
  border-radius: 10px;
  box-shadow: 
    0 0 8px #7476ff, 
    0 0 16px #7476ff, 
    inset 0 0 4px #0408fb;

  h2 {
    text-align: center;
    font-size: 2rem;
    margin-bottom: 20px;
    text-shadow: 0 0 8px #7476ff;
  }

  .customize-preview {
    display: flex;
    justify-content: center;
    margin-bottom: 20px;

    .preview-box {
      padding: 20px;
      border-radius: 8px;
      min-height: 80px;
      width: 100%;
      display: flex;
      justify-content: center;
      align-items: center;
      background: #101010;
      transition: box-shadow 0.3s ease;

      .preview-text {
        font-size: 2rem;
        text-shadow: 0 0 10px currentColor, 0 0 20px currentColor;
      }
    }
  }

  .customize-form {
    display: flex;
    flex-direction: column;
    gap: 12px;

    label {
      font-weight: bold;
      text-shadow: 0 0 5px #7476ff;
    }

    input, select {
      padding: 10px;
      border-radius: 6px;
      border: 2px solid #7476ff;
      background: #222;
      color: #fff;
      outline: none;
      transition: border-color 0.3s, box-shadow 0.3s;

      &:focus {
        border-color: #0408fb;
        box-shadow: 0 0 10px #0408fb;
      }
    }

    .price {
      font-weight: bold;
      font-size: 1.5rem;
      text-align: center;
      margin-top: 10px;
      text-shadow: 0 0 5px #7476ff;
    }

    button {
      margin-top: 15px;
      padding: 12px;
      background-color: #7476ff;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      color: #fff;
      font-size: 1rem;
      transition: transform 0.3s, box-shadow 0.3s;

      &:hover {
        background-color: #0408fb;
        transform: translateY(-4px);
        box-shadow: 0 0 10px #0408fb, 0 0 20px #0408fb;
      }
    }
  }
}

// Responsive t√©l√©phone
@media (max-width: 600px) {
  .customize-neon {
    width: 90%;
    padding: 15px;

    h2 {
      font-size: 1.6rem;
    }

    .customize-preview .preview-text {
      font-size: 1.5rem;
    }

    .customize-form button {
      width: 100%;
    }
  }
}

--------------------

Fichier: src/components/CustomizeNeonComponent/index.jsx
Code:
import CustomizeNeonComponent from './CustomizeNeonComponent';

// traitement interm√©diaire ou logique sp√©cifique ici

export default CustomizeNeonComponent;

--------------------

Dossier: src/components/Forms

Dossier: src/components/Forms/ContactIdeaForm

Fichier: src/components/Forms/ContactIdeaForm/ContactIdeaForm.jsx
Code:
import React, { useState } from 'react';
import './ContactIdea.scss';

function ContactIdeaPage() {
  const [name, setName] = useState('');
  const [email, setEmail] = useState('');
  const [idea, setIdea] = useState('');
  const [file, setFile] = useState(null);

  function handleSubmit(e) {
    e.preventDefault();
    alert(`Projet envoy√© : ${name}, ${email}, ${idea}, fichier : ${file?.name || 'Aucun'}`);
    // TODO: appel API r√©el pour stocker / mailer
  }

  return (
    <div className="contact-idea-page">
      <h2>‚ú® Envoyez-nous votre id√©e/projet ‚ú®</h2>
      <form onSubmit={handleSubmit} className="contact-form">
        <label>Nom</label>
        <input 
          value={name} 
          onChange={e => setName(e.target.value)} 
          required 
          placeholder="Votre nom"
        />

        <label>Email</label>
        <input 
          type="email" 
          value={email} 
          onChange={e => setEmail(e.target.value)} 
          required 
          placeholder="votre.email@example.com"
        />

        <label>Description du projet</label>
        <textarea 
          value={idea} 
          onChange={e => setIdea(e.target.value)} 
          rows={4}
          required
          placeholder="D√©crivez votre id√©e..."
        />

        <label>Logo/Photo (optionnel)</label>
        <input type="file" onChange={e => setFile(e.target.files[0])} />

        <button type="submit" className="neon-button">Envoyer üöÄ</button>
      </form>
    </div>
  );
}

export default ContactIdeaPage;

--------------------

Fichier: src/components/Forms/ContactIdeaForm/_contact.scss
Code:
.contact-idea-page {
  max-width: 700px;
  margin: 60px auto;
  padding: 30px;
  font-family: 'Mali', sans-serif;
  color: #fff;
  background-color: rgba(0,0,0,0.9);
  border-radius: 12px;
  box-shadow:
    0 0 10px #7476ff,
    0 0 20px #0408fb;

  h2 {
    text-align: center;
    font-size: 2rem;
    margin-bottom: 30px;
    text-shadow:
      0 0 5px #7476ff,
      0 0 10px #0408fb;
  }

  .contact-form {
    display: flex;
    flex-direction: column;
    gap: 15px;

    label {
      font-weight: bold;
      font-size: 1rem;
      text-shadow: 0 0 6px #7476ff;
    }

    input,
    textarea {
      background: #1a1a1a;
      border: 2px solid #7476ff;
      border-radius: 6px;
      padding: 10px;
      font-size: 1rem;
      color: #fff;
      transition: border 0.3s ease, box-shadow 0.3s ease;

      &:focus {
        border-color: #0408fb;
        box-shadow:
          0 0 6px #7476ff,
          0 0 12px #0408fb;
        outline: none;
      }
    }

    input[type="file"] {
      border: none;
      padding: 0;
      background: transparent;
    }

    .neon-button {
      align-self: center;
      padding: 12px 30px;
      font-size: 1.1rem;
      color: #fff;
      background-color: transparent;
      border: 2px solid #7476ff;
      border-radius: 25px;
      cursor: pointer;
      transition: all 0.3s ease;
      box-shadow:
        0 0 6px #7476ff,
        0 0 12px #0408fb;

      &:hover {
        background-color: #7476ff;
        box-shadow:
          0 0 12px #7476ff,
          0 0 24px #0408fb;
        transform: scale(1.05);
      }

      &:active {
        transform: scale(0.95);
      }
    }
  }
}

@media (max-width: 768px) {
  .contact-idea-page {
    max-width: 90%;
    padding: 20px;
  }

  .neon-button {
    width: 100%;
  }
}

--------------------

Dossier: src/components/Forms/ContactIdeaForm/a

Fichier: src/components/Forms/ContactIdeaForm/index.jsx
Code:
import ContactIdeaForm from './ContactIdeaForm';

// traitement interm√©diaire ou logique sp√©cifique ici

export default ContactIdeaForm;

--------------------

Dossier: src/components/Forms/ContactIdeaForm/suppr

Dossier: src/components/Forms/Newsletter

Fichier: src/components/Forms/Newsletter/Newsletter.jsx
Code:
import React, { useState } from 'react';
import './_newsletter.scss';

/**
 * Fonction simple de validation d'email.
 * - Ici, un regex basique pour illustrer.
 * - En production, privil√©gier un service (p. ex. validator.js)
 */
function validateEmail(email) {
  // Regex tr√®s basique, √† adapter si besoin
  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  return emailRegex.test(email.trim());
}

function Newsletter() {
  const [email, setEmail] = useState('');
  const [error, setError] = useState(null);

  /**
   * V√©rifie l'email avant de proc√©der √† l'inscription.
   */
  const handleSubscribe = () => {
    const trimmedEmail = email.trim();

    // V√©rification : l'email ne doit pas √™tre vide et doit √™tre au bon format
    if (!trimmedEmail) {
      setError("L'email ne peut pas √™tre vide.");
      return;
    }
    if (!validateEmail(trimmedEmail)) {
      setError("L'email saisi n'est pas valide.");
      return;
    }

    // √Ä ce stade, l'email est consid√©r√© valide
    setError(null);

    // Simule l'appel √† un service ou API pour l'inscription
    // En production : fetch ou axios vers votre backend
    alert(`Inscription r√©ussie avec l'email : ${trimmedEmail}`);

    // R√©initialise le champ
    setEmail('');
  };

  return (
    <section className="newsletter-section">
      <h2>Restez connect√© !</h2>
      <p>Soyez les premiers inform√©s de nos nouveaut√©s et offres exclusives.</p>

      <div className="newsletter-form">
        <input
          type="email"
          placeholder="Votre email"
          value={email}
          onChange={(e) => {
            setEmail(e.target.value);
            setError(null); // Reset de l'erreur au changement
          }}
          aria-label="Saisissez votre adresse email pour vous inscrire"
        />
        <button onClick={handleSubscribe}>
          S'inscrire ‚Üí
        </button>
      </div>

      {/* Affichage d'un √©ventuel message d'erreur */}
      {error && <div className="newsletter-error">{error}</div>}
    </section>
  );
}

export default Newsletter;

--------------------

Fichier: src/components/Forms/Newsletter/_newsletter.scss
Code:
/* ==========================================================================
   /home/ubuntu/site1/src/components/Newsletter/_newsletter.scss
   --------------------------------------------------------------------------
   SCSS pour la section Newsletter, avec des effets n√©on plus intenses.
   ========================================================================== */

@import '../../../scss/_variables';

/* 
      Variables Sass (ex. dans _variables.scss) :
      $border-radius: 8px;
      $transition-speed: 0.3s;
      -- Couleurs principales utilis√©es :
         #7476ff (violet)
         #0408fb (bleu)
         #ffd700 (or, si besoin)
   */

/* SECTION Newsletter */
.newsletter-section {
  text-align: center;
  background: #000;
  /* Fond noir */
  color: #fff;
  padding: 40px 20px;
  font-family: 'Mali', sans-serif;
  position: relative;

  /* Titre principal */
  h2 {
    font-size: 2rem;
    margin-bottom: 10px;
    text-shadow:
      0 0 8px #7476ff,
      0 0 16px #0408fb;
  }

  /* Paragraphe d'intro */
  p {
    font-size: 1rem;
    margin-bottom: 20px;
    text-shadow: 0 0 6px #7476ff;
  }

  /* Conteneur du formulaire (input + button) */
  .newsletter-form {
    display: flex;
    justify-content: center;
    gap: 10px;

    /* Champ de saisie */
    input {
      padding: 10px;
      width: 250px;
      border: none;
      border-radius: $border-radius;
      font-size: 1rem;
      outline: none;
      color: #333;
      background: rgba(255, 255, 255, 0.15);
      /* Ombrage discret par d√©faut */
      box-shadow: inset 0 0 4px #7476ff;

      &:focus {
        /* Effet n√©on plus intense, lighten( ,30%) + plusieurs couches */
        box-shadow:
          0 0 6px lighten(#7476ff, 30%),
          0 0 12px lighten(#0408fb, 30%),
          0 0 18px lighten(#7476ff, 30%),
          /* une couche suppl√©mentaire */
          inset 0 0 6px lighten(#7476ff, 30%);
        transition: box-shadow $transition-speed ease;
      }
    }

    /* Bouton d'inscription */
    button {
      padding: 10px 20px;
      background-color: #7476ff;
      color: #fff;
      font-size: 1rem;
      border: none;
      border-radius: $border-radius;
      cursor: pointer;
      /* Ombrage n√©on de base */
      box-shadow:
        0 0 8px #7476ff,
        0 0 16px #0408fb;
      transition: transform $transition-speed ease,
        box-shadow $transition-speed ease;

      &:hover {
        transform: scale(1.05);
        /* Intensification sur hover, lighten( ,30%) + couches suppl√©mentaires */
        box-shadow:
          0 0 12px lighten(#7476ff, 30%),
          0 0 24px lighten(#0408fb, 30%),
          0 0 32px lighten(#7476ff, 30%);
      }

      &:active {
        transform: scale(0.97);
        box-shadow:
          0 0 10px lighten(#7476ff, 30%),
          0 0 20px lighten(#0408fb, 30%);
      }
    }
  }

  /* Message d'erreur √©ventuel */
  .newsletter-error {
    margin-top: 10px;
    font-weight: bold;
    color: #ff4444;
    text-shadow: 0 0 4px #ff4444;
  }

  /* Responsivit√© */
  @media (max-width: 768px) {
    .newsletter-form {
      flex-direction: column;
      align-items: center;

      input,
      button {
        width: 100%;
        max-width: 300px;
      }

      button {
        margin-top: 10px;
      }
    }
  }
}
--------------------

Fichier: src/components/Forms/Newsletter/index.jsx
Code:
import Newsletter from './Newsletter';

// traitement interm√©diaire ou logique sp√©cifique ici

export default Newsletter;

--------------------

Dossier: src/components/HeaderFooter

Dossier: src/components/HeaderFooter/Footer

Fichier: src/components/HeaderFooter/Footer/Footer.jsx
Code:
// src/components/Footer.jsx
import React from 'react';
import './_footer.scss'; 

function Footer() {
  return (
    <footer className="footer">
      <p>¬© 2025 - Tous droits r√©serv√©s | <a href="/mentions-legales">Mentions l√©gales</a></p>
    </footer>
  );
}

export default Footer;

--------------------

Fichier: src/components/HeaderFooter/Footer/_footer.scss
Code:
.footer {
  background: black;
  color: #fff;
  padding: 20px;
  text-align: center;
  position: relative;
  font-family: 'Mali', sans-serif;

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 3px; // √âpaisseur optimis√©e pour effet n√©on
    background-color: #7476ff;
    box-shadow:
      0 0 6px 1px #7476ff,
      0 0 12px 3px #7476ff,
      0 0 18px 4px #0408fb;
    animation: neon-glow 2s infinite alternate;
  }

  @keyframes neon-glow {
    from { opacity: 0.7; }
    to { opacity: 1; }
  }

  p {
    font-size: 16px;
    letter-spacing: 1px;
    margin: 0;
  }

  a {
    color: #fff;
    font-weight: bold;
    text-decoration: none;
    transition: all 0.3s ease;

    &:hover {
      color: #FFD700;
      text-shadow:
        0 0 5px #FFD700,
        0 0 10px #FFC700,
        0 0 15px #FFB700;
    }
  }
}

--------------------

Fichier: src/components/HeaderFooter/Footer/index.jsx
Code:
import Footer from './Footer';

// traitement interm√©diaire ou logique sp√©cifique ici

export default Footer;

--------------------

Dossier: src/components/HeaderFooter/Header

Fichier: src/components/HeaderFooter/Header/Header.jsx
Code:
// src/components/Header/Header.jsx
import React, { useState } from 'react'; // <-- Ajout de useState
import { Link } from 'react-router-dom';
import './_header.scss';

function Header() {
  // AJOUT : √©tat pour g√©rer la sidebar
  const [sidebarOpen, setSidebarOpen] = useState(false);

  // Icones inline (burger / close)
  const burgerIcon = (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <line x1="3" y1="6" x2="21" y2="6"></line>
      <line x1="3" y1="12" x2="21" y2="12"></line>
      <line x1="3" y1="18" x2="21" y2="18"></line>
    </svg>
  );

  const closeIcon = (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <line x1="18" y1="6" x2="6" y2="18"></line>
      <line x1="6" y1="6" x2="18" y2="18"></line>
    </svg>
  );

  return (
    <header className="header">
      {/* Logo √† gauche (inchang√©) */}
      <div className="logo">
        <Link to="/">
          STUDIO NEON
        </Link>
      </div>

      {/* Barre de navigation (inchang√©e) */}
      <nav className="nav-links">
        <Link to="/shop" className="nav-item">
          {/* Ic√¥ne inline pour "Shop" */}
          <svg
            className="icon"
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            fill="none"
            stroke="#fff"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
          >
            <path d="M6 2L3 6v14c0 1.1.9 2 2 2h14a2 2 0 0 0 2-2V6l-3-4H6zM3.8 6h16.4M16 10a4 4 0 1 1-8 0" />
          </svg>
          <span>Shop</span>
        </Link>

        <Link to="/customize" className="nav-item">
          {/* Ic√¥ne inline pour "Personnaliser" */}
          <svg
            className="icon"
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            fill="none"
            stroke="#fff"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
          >
            <polygon points="14 2 18 6 7 17 3 17 3 13 14 2" />
            <line x1="3" y1="22" x2="21" y2="22" />
          </svg>
          <span>Personnaliser</span>
        </Link>

        <Link to="/contact-idea" className="nav-item">
          {/* Ic√¥ne inline pour "Projet" */}
          <svg
            className="icon"
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            fill="none"
            stroke="#fff"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
          >
            <path d="M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z" />
          </svg>
          <span>Projet</span>
        </Link>

        <Link to="/cart" className="nav-item">
          {/* Ic√¥ne inline pour "Panier" */}
          <svg
            className="icon"
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            fill="none"
            stroke="#fff"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
          >
            <circle cx="10" cy="20.5" r="1"/>
            <circle cx="18" cy="20.5" r="1"/>
            <path d="M2.5 2.5h3l2.7 12.4a2 2 0 0 0 2 1.6h7.7a2 2 0 0 0 2-1.6l1.6-8.4H7.1"/>
          </svg>
          <span>Panier</span>
        </Link>

        {/* AJOUT : bouton burger, visible en toute taille, 
            mais surtout utile en mobile */}
        <button 
          className="burger-btn"
          onClick={() => setSidebarOpen(true)}
        >
          {burgerIcon}
        </button>
      </nav>

      {/* AJOUT : la sidebar */}
      <div className={`sidebar ${sidebarOpen ? 'open' : ''}`}>
        <button className="close-btn" onClick={() => setSidebarOpen(false)}>
          {closeIcon}
        </button>

        {/* Liens dans la sidebar */}
        <Link to="/shop" onClick={() => setSidebarOpen(false)}>Shop</Link>
        <Link to="/customize" onClick={() => setSidebarOpen(false)}>Personnaliser</Link>
        <Link to="/contact-idea" onClick={() => setSidebarOpen(false)}>Projet</Link>
        <Link to="/cart" onClick={() => setSidebarOpen(false)}>Panier</Link>
      </div>
    </header>
  );
}

export default Header;

--------------------

Fichier: src/components/HeaderFooter/Header/_header.scss
Code:
/* src/scss/_header.scss */

/* ======================
   CODE EXISTANT
   ====================== */

.header {
  background: black;
  color: #fff;
  padding: 10px 20px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  position: relative;
  font-family: 'Mali', sans-serif; // Application de la police Mali √† tout le header

  &::after {
    content: "";
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 3px; // √âpaisseur optimis√©e pour effet n√©on
    background-color: #7476ff; // Couleur de base n√©on
    box-shadow: 0 0 6px 1px #7476ff, 0 0 12px 3px #7476ff, 0 0 18px 4px #0408fb;
    animation: neon-glow 2s infinite alternate;
  }

  @keyframes neon-glow {
    from {
      opacity: 0.7;
    }

    to {
      opacity: 1;
    }
  }

  a {
    color: #fff;
    text-decoration: none;
    font-weight: bold;
    transition: all 0.3s ease;

    &:hover {
      color: #FFD700;
      text-shadow: 0 0 8px #FFD700;
    }
  }

  .logo {
    font-size: 28px;
    font-weight: bold;
    letter-spacing: 4px;
    color: #fff;
    text-transform: uppercase;
    position: relative;
    padding: 5px 10px;
    cursor: pointer;
    transition: all 0.3s ease;

    a {
      color: inherit;
      text-decoration: none;
      position: relative;
      z-index: 1;
      text-shadow:
        0 0 5px #00f0ff,
        0 0 10px #00c0ff,
        0 0 20px #00aaff,
        0 0 30px #0080ff,
        0 0 40px #005eff,
        0 0 50px #003cff,
        0 0 75px #002aff;

      &:hover {
        text-shadow:
          0 0 8px #00f0ff,
          0 0 16px #00c0ff,
          0 0 32px #00aaff,
          0 0 48px #0080ff,
          0 0 64px #005eff,
          0 0 80px #003cff,
          0 0 100px #002aff;
        transform: scale(1.05);
      }
    }

    &::before {
      content: "";
      position: absolute;
      top: -2px;
      left: -2px;
      right: -2px;
      bottom: -2px;
      border-radius: 6px;
      background: rgba(0, 123, 255, 0.2);
      box-shadow:
        0 0 10px 2px #00f0ff,
        0 0 20px 4px #00aaff,
        inset 0 0 10px 1px #007bff;
      opacity: 0;
      transition: opacity 0.3s ease;
    }

    &:hover::before {
      opacity: 1;
    }
  }

  .nav-links {
    display: flex;
    gap: 50px;

    a {
      font-size: 19px;
      border-radius: 22px;
      padding: 6px 14px;

      &:hover {
        background: rgba(116, 118, 255, 0.2);
        box-shadow: 0 0 10px #FFD700, inset 0 0 4px #FFD700;
      }
    }
  }
}

/* Par d√©faut, .nav-item met l‚Äôic√¥ne au-dessus du texte (colonne) */
.nav-item {
  display: flex;
  flex-direction: column;
  align-items: center;
}

/* Adaptation pour mobile */
@media (max-width: 768px) {
  .header {
    flex-direction: column;
    align-items: center;
    padding: 10px;
  }

  .logo {
    margin-bottom: 6px; // R√©duit l'espace sous le logo
  }

  .nav-links {
    flex-direction: row;
    gap: 10px;
    margin-top: 4px;

    a {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 40px;
      height: 40px;
      line-height: 1;
      padding: 0;
      overflow: visible;
      font-size: 0;
      color: #fff;
      border-radius: 4px;

      &:hover {
        background: rgba(116, 118, 255, 0.2);
      }

      svg.icon {
        display: block;
        width: 20px;
        height: 20px;
        overflow: visible;
      }
    }
  }

  .nav-item {
    flex-direction: row !important;
    align-items: center;
    gap: 4px !important;
    overflow: visible !important;
  }

  .nav-item span {
    display: none;
  }

  .nav-links a {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 40px;
    height: 40px;
    overflow: visible;
    border-radius: 50%;
    text-decoration: none;
    color: #fff;
    font-size: 0;

    svg.icon {
      width: 24px;
      height: 24px;
      display: block;
    }

    &::before {
      content: "";
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 48px;
      height: 48px;
      border-radius: 50%;
      z-index: -1;
      background: rgba(255, 255, 255, 0.1);
      box-shadow:
        0 0 6px 2px rgba(255, 215, 0, 0.7),
        0 0 12px 4px rgba(255, 215, 0, 0.4);
      opacity: 0;
      transition: opacity 0.3s ease;
    }

    &:hover::before {
      opacity: 1;
    }
  }
}

/* ===========================
     = SIDEBAR (Nouveau code)  =
     ===========================
     Ajout d'un conteneur .sidebar, masqu√© par d√©faut, qui appara√Æt quand on lui ajoute la classe .open.
  */
.sidebar {
  position: fixed;
  top: 0;
  right: -250px;
  /* Pour un slide depuis la droite */
  width: 250px;
  height: 100vh;
  background: rgba(0, 0, 0, 0.9);
  color: #fff;
  padding: 20px;
  transition: right 0.3s ease;
  z-index: 9999;
  /* Au-dessus du header */

  box-shadow: 0 0 10px #7476ff, 0 0 20px #0408fb inset;

  &.open {
    right: 0;
    /* Fait glisser la sidebar sur l'√©cran */
  }

  a {
    display: block;
    margin-bottom: 16px;
    color: #fff;

    &:hover {
      text-decoration: underline;
    }
  }

  .close-btn {
    background: none;
    border: none;
    color: #fff;
    font-size: 24px;
    cursor: pointer;
    float: right;
  }
}

/* Exemples de styles pour le bouton burger */
.burger-btn {
  background: none;
  border: none;
  color: #fff;
  cursor: pointer;
  /* On peut adapter l'affichage en mobile ou desktop */
  display: flex;
  align-items: center;
  justify-content: center;

  svg {
    width: 24px;
    height: 24px;
    stroke: #fff;
    /* Couleur des traits */
  }

  &:hover {
    svg {
      stroke: #FFD700;
      /* Survol plus flashy */
    }
  }
}
--------------------

Fichier: src/components/HeaderFooter/Header/index.jsx
Code:
import Header from './Header';

// traitement interm√©diaire ou logique sp√©cifique ici

export default Header;

--------------------

Dossier: src/components/ImageWithText

Fichier: src/components/ImageWithText/ImageWithText.jsx
Code:
import React from 'react';
import { useNavigate } from 'react-router-dom';
import './_image-text.scss';

function ImageWithText() {
  const navigate = useNavigate();

  return (
    <section className="image-with-text">
      <img src="/images/tshirt.png" alt="Produit personnalis√©" className="image-with-text__img" />
      <div className="content">
        <h3>Vous avez une id√©e en t√™te ?</h3>
        <button className="neon-button" onClick={() => navigate('/contact-idea')}>
          Envoyez-nous votre projet
        </button>
      </div>
    </section>
  );
}

export default ImageWithText;

--------------------

Fichier: src/components/ImageWithText/_image-text.scss
Code:
.image-with-text {
  display: flex;
  align-items: center;
  justify-content: center;
  background: transparent; // ‚úÖ Suppression du fond blanc
  margin: 40px auto;
  padding: 20px;
  max-width: 1000px;
  gap: 20px;
  flex-wrap: wrap;

  &__img {
    width: 100%;
    max-width: 350px;
    border-radius: 12px;
    box-shadow: 
      0 0 10px rgba(0, 0, 255, 0.4),
      0 0 20px rgba(0, 0, 255, 0.2);
    transition: transform 0.3s ease;

    &:hover {
      transform: scale(1.05);
    }
  }

  .content {
    flex: 1;
    background: rgba(0, 0, 0, 0.8);
    color: #fff;
    padding: 25px;
    border-radius: 12px;
    box-shadow:
      0 0 8px rgba(0, 123, 255, 0.6),
      inset 0 0 8px rgba(0, 123, 255, 0.4);

    h3 {
      font-size: 1.8rem;
      margin-bottom: 15px;
      text-shadow: 0 0 6px rgba(0, 123, 255, 0.7);
    }

    p {
      font-size: 1rem;
      margin-bottom: 20px;
    }

    .neon-button {
      background: transparent;
      border: 2px solid #007bff;
      color: #fff;
      padding: 10px 20px;
      border-radius: 25px;
      cursor: pointer;
      box-shadow: 0 0 10px #007bff, inset 0 0 10px #007bff;
      transition: all 0.3s ease;

      &:hover {
        background: #007bff;
        box-shadow: 0 0 20px #00aaff, inset 0 0 10px #005eff;
      }
    }
  }
}

// ‚úÖ Responsive Mobile
@media (max-width: 768px) {
  .image-with-text {
    flex-direction: column;
    padding: 10px;

    &__img {
      margin-bottom: 20px;
    }

    .content {
      width: 100%;
      text-align: center;
    }
  }
}

--------------------

Fichier: src/components/ImageWithText/index.jsx
Code:
import ImageWithText from './ImageWithText';

// traitement interm√©diaire ou logique sp√©cifique ici

export default ImageWithText;

--------------------

Dossier: src/components/Productpage

Fichier: src/components/Productpage/index.jsx
Code:
// src/pages/Cart/index.jsx
import Productpage from './Productpage';

// traitement interm√©diaire ou logique sp√©cifique ici

export default Productpage;

--------------------

Dossier: src/components/ShoppingBag_PasUtileMaintenant

Fichier: src/components/ShoppingBag_PasUtileMaintenant/ShoppingBag.jsx
Code:
// src/components/ShoppingBag/ShoppingBag.jsx

import React from "react";
import "./ShoppingBag.scss";

/**
 * Composant ShoppingBag
 * @param {object} props - Les propri√©t√©s du composant.
 * @param {number} [props.size=40] - La taille (largeur et hauteur) de l'ic√¥ne.
 * @param {string} [props.color="#000000"] - La couleur de l'ic√¥ne.
 * @returns {JSX.Element} Un SVG repr√©sentant un panier.
 */
const ShoppingBag = ({ size = 40, color = "#000000" }) => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width={size}
    height={size}
    viewBox="0 0 24 24"
    fill="none"
    stroke={color}
    strokeWidth="2"
    strokeLinecap="round"
    strokeLinejoin="round"
    className="shopping-bag-icon"
  >
    <path d="M6 2L3 6v14c0 1.1.9 2 2 2h14a2 2 0 0 0 2-2V6l-3-4H6z" />
    <path d="M3.8 6h16.4" />
    <path d="M16 10a4 4 0 1 1-8 0" />
  </svg>
);

export default ShoppingBag;

--------------------

Fichier: src/components/ShoppingBag_PasUtileMaintenant/ShoppingBag.scss
Code:
/* /home/ubuntu/site1/src/components/ShoppingBag/ShoppingBag.scss */

.shopping-bag-icon {
    /* Exemple de style additionnel si n√©cessaire */
    transition: transform 0.3s ease;

    &:hover {
        transform: scale(1.1);
    }
}
--------------------

Fichier: src/components/ShoppingBag_PasUtileMaintenant/index.jsx
Code:
// src/components/ShoppingBag/index.jsx
import ShoppingBag from './ShoppingBag';
export default ShoppingBag;

--------------------

Fichier: src/components/ShoppingBag_PasUtileMaintenant/pourcomprendre.txt
Code:
la j'ai juste creer le components au cas ou on auraitbesoin de les reutiliser mais deja le header.jsx fonctionnne et 
cest plus rapide de mettre les svg dans le headerjsx le plus important cest davancer dans le site ! 
eviter les Erreur fr√©quente :
Certains d√©butants pensent qu'il faut cr√©er un container pour chaque ic√¥ne. En r√©alit√©, 
chaque ic√¥ne peut √™tre un composant autonome et √™tre utilis√©e directement dans un composant parent (exemple : un menu ou un header).
 On n'a pas besoin de container suppl√©mentaire pour chaque ic√¥ne, mais il est souvent judicieux de les regrouper 
 dans un composant qui g√®re l'agencement (par exemple, un composant "NavBar" qui contient plusieurs ic√¥nes).

on a pas 20 ic√¥nes
donc cest trkl
--------------------

Dossier: src/components/ThreeRows

Fichier: src/components/ThreeRows/ThreeRows.jsx
Code:
// src/components/ThreeRows/ThreeRows.jsx
import React from 'react';
import './ThreeRows.scss';

const ThreeRows = () => {
  return (
    <section className="three-rows">
      <div className="neon-card neon-gold">
        <h3>Fabrication Artisanale</h3>
        <p>Chaque n√©on est unique, con√ßu avec pr√©cision.</p>
      </div>
      <div className="neon-card neon-pink">
        <h3>Livraison Rapide</h3>
        <p>Recevez rapidement votre n√©on o√π que vous soyez.</p>
      </div>
      <div className="neon-card neon-purple">
        <h3>Service Client R√©actif</h3>
        <p>Nous sommes disponibles 7j/7 pour vous accompagner.</p>
      </div>
    </section>
  );
};

export default ThreeRows;

--------------------

Fichier: src/components/ThreeRows/ThreeRows.scss
Code:
@import '../../scss/_variables';

.three-rows {
  display: flex;
  justify-content: space-between;
  gap: 2rem;
  padding: 3rem 2rem;
  background-color: #000;
  font-family: 'Mali', sans-serif;

  .neon-card {
    padding: 20px;
    border-radius: 12px;
    background: rgba(0, 0, 0, 0.8);
    transition: all 0.3s ease;
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.2);
    flex: 1;

    h3 {
      font-size: 1.6rem;
      margin-bottom: 10px;
      color: #fff;
    }

    p {
      color: #ccc;
      font-size: 1rem;
    }

    &:hover {
      transform: translateY(-8px);
    }
  }

  .neon-gold {
    box-shadow:
      0 0 5px #ffd700,
      0 0 15px #ffd700,
      0 0 25px #ffc400,
      inset 0 0 5px #ffd700;
  
    &:hover {
      box-shadow:
        0 0 8px #ffd700,
        0 0 20px #ff9900,
        0 0 25px #ff9900;
    }
  
    h3 {
      text-shadow: 0 0 8px #ffd700;
    }
  }

  .neon-pink {
    box-shadow:
      0 0 5px #ff1493,
      0 0 15px #ff1493,
      0 0 25px #ff007f,
      inset 0 0 5px #ff1493;
  
    &:hover {
      box-shadow:
        0 0 8px #ff1493,
        0 0 20px #ff007f;
    }
  
    h3 {
      text-shadow: 0 0 8px #ff1493;
    }
  }

  .neon-purple {
    box-shadow:
      0 0 5px #b300ff,
      0 0 15px #b300ff,
      0 0 20px #b300ff;

    &:hover {
      box-shadow:
        0 0 8px #b300ff,
        0 0 20px #b300ff;
    }

    h3 {
      text-shadow: 0 0 8px #b300ff;
    }
  }
}

// Responsive (Optimisation pour t√©l√©phone)
@media (max-width: 768px) {
  .three-rows {
    flex-direction: column;
    padding: 1.5rem 1rem;
    gap: 1rem;

    .neon-card {
      width: 100%;
      padding: 15px;

      h3 {
        font-size: 1.3rem;
      }

      p {
        font-size: 0.95rem;
      }
    }
  }
}

--------------------

Fichier: src/components/ThreeRows/index.jsx
Code:
import ThreeRows from './ThreeRows';

// traitement interm√©diaire ou logique sp√©cifique ici

export default ThreeRows;

--------------------

Dossier: src/context

Fichier: src/context/CarteContext.jsx
Code:
///home/ubuntu/site1/src/context/CarteContext.jsx

import React, { createContext, useState, useContext, useEffect } from 'react';
import {
  loadCart,
  saveCart,
  addToCart,
  increment,
  decrement,
  removeItem,
  calculateTotal,
} from '../services/cartService';

const CartContext = createContext();

export const useCart = () => useContext(CartContext);

export const CartProvider = ({ children }) => {
  const [items, setItems] = useState([]);

  useEffect(() => {
    setItems(loadCart()); // Charge les donn√©es stock√©es au d√©marrage
  }, []);

  useEffect(() => {
    saveCart(items); // Sauvegarde automatique √† chaque mise √† jour
  }, [items]);

  const handleAddToCart = (product) => setItems((prev) => addToCart(prev, product));
  const handleIncrement = (id) => setItems((prev) => increment(prev, id));
  const handleDecrement = (id) => setItems((prev) => decrement(prev, id));
  const handleRemoveItem = (id) => setItems((prev) => removeItem(prev, id));
  const totalPrice = calculateTotal(items);

  return (
    <CartContext.Provider
      value={{ items, handleAddToCart, handleIncrement, handleDecrement, handleRemoveItem, totalPrice }}
    >
      {children}
    </CartContext.Provider>
  );
};

--------------------

Dossier: src/data

Fichier: src/data/colors.json
Code:
[
    { "name": "Rouge", "hex": "#FF0000" },
    { "name": "Bleu", "hex": "#0000FF" },
    { "name": "Vert", "hex": "#00FF00" }
  ]
  
--------------------

Fichier: src/data/polices.json
Code:
[
    { "name": "Helvetica", "extraCost": 0 },
    { "name": "Arial", "extraCost": 1 }
  ]
  
--------------------

Fichier: src/data/pricingRules.json
Code:
{
    "sizes": {
      "50cm": 50,
      "75cm": 75,
      "100cm": 100
    },
    "panelExtra": 1.11 
  }
  
--------------------

Fichier: src/data/shopProducts.json
Code:
[
  {
    "id": 1,
    "name": "N√©on Hello",
    "price": 50,
    "image": "/images/neonHello.jpg"
  },
  {
    "id": 2,
    "name": "N√©on Open",
    "price": 60,
    "image": "/images/neonOpen.jpg"
  },
  {
    "id": 3,
    "name": "N√©on Love",
    "price": 70,
    "image": "/images/neonLove.jpg"
  },

  {
    "id": 4,
    "name": "N√©on Dream",
    "price": 75,
    "image": "/images/neonDream.jpg"
  },
  {
    "id": 5,
    "name": "N√©on Star",
    "price": 80,
    "image": "/images/neonStar.jpg"
  },
  {
    "id": 6,
    "name": "N√©on Shine",
    "price": 85,
    "image": "/images/neonShine.jpg"
  },
  {
    "id": 7,
    "name": "N√©on Party",
    "price": 70,
    "image": "/images/neonParty.jpg"
  },
  {
    "id": 8,
    "name": "N√©on Bar",
    "price": 90,
    "image": "/images/neonBar.jpg"
  },
  {
    "id": 9,
    "name": "N√©on Cheers",
    "price": 95,
    "image": "/images/neonCheers.jpg"
  },
  {
    "id": 10,
    "name": "N√©on Moon",
    "price": 100,
    "image": "/images/neonMoon.jpg"
  },
  {
    "id": 11,
    "name": "N√©on Star2",
    "price": 110,
    "image": "/images/neonStar2.jpg"
  },
  {
    "id": 12,
    "name": "N√©on Chill",
    "price": 65,
    "image": "/images/neonChill.jpg"
  },
  {
    "id": 13,
    "name": "N√©on Music",
    "price": 105,
    "image": "/images/neonMusic.jpg"
  },
  {
    "id": 14,
    "name": "N√©on Coffee",
    "price": 60,
    "image": "/images/neonCoffee.jpg"
  },
  {
    "id": 15,
    "name": "N√©on Cupcake",
    "price": 70,
    "image": "/images/neonCupcake.jpg"
  },
  {
    "id": 16,
    "name": "N√©on Flamingo",
    "price": 95,
    "image": "/images/neonFlamingo.jpg"
  },
  {
    "id": 17,
    "name": "N√©on Paradise",
    "price": 120,
    "image": "/images/neonParadise.jpg"
  },
  {
    "id": 18,
    "name": "N√©on Beach",
    "price": 110,
    "image": "/images/neonBeach.jpg"
  },
  {
    "id": 19,
    "name": "N√©on Gamer",
    "price": 75,
    "image": "/images/neonGamer.jpg"
  },
  {
    "id": 20,
    "name": "N√©on Wifi",
    "price": 65,
    "image": "/images/neonWifi.jpg"
  },
  {
    "id": 21,
    "name": "N√©on Cactus",
    "price": 80,
    "image": "/images/neonCactus.jpg"
  },
  {
    "id": 22,
    "name": "N√©on Rose",
    "price": 85,
    "image": "/images/neonRose.jpg"
  },
  {
    "id": 23,
    "name": "N√©on Wine",
    "price": 100,
    "image": "/images/neonWine.jpg"
  }
]

--------------------

Fichier: src/data/testSubmissions.json
Code:


[
    {
      "firstName": "Alice",
      "name": "Dupont",
      "email": "alice@example.com",
      "phone": "+33 612345678",
      "idea": "Id√©e de projet pour am√©liorer l'UX du site.",
      "file": "logo1.png"
    }

]
  
--------------------

Fichier: src/index.css
Code:
body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

--------------------

Fichier: src/index.jsx
Code:
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';
import './scss/App.scss';


const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();

--------------------

Fichier: src/logo.svg
Code:
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 841.9 595.3"><g fill="#61DAFB"><path d="M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z"/><circle cx="420.9" cy="296.5" r="45.7"/><path d="M520.5 78.1z"/></g></svg>
--------------------

Dossier: src/pages

Dossier: src/pages/Admin

Dossier: src/pages/Admin/AdminDashboard

Fichier: src/pages/Admin/AdminDashboard/AdminDashboard.jsx
Code:
// site1/src/pages/Admin/AdminDashboard/AdminDashboard.jsx
import React, { useEffect, useState } from 'react';
import { 
  getShopProducts, saveShopProducts,
  getPolices, savePolices,
  getColors, saveColors
} from '../../../services/dataService';

function AdminDashboard() {
  const [shopItems, setShopItems] = useState([]);
  const [polices, setPolicesState] = useState([]);
  const [colors, setColorsState] = useState([]);

  // Champs pour ajouter un nouveau produit
  const [newProdName, setNewProdName] = useState('');
  const [newProdPrice, setNewProdPrice] = useState('');
  const [newProdImage, setNewProdImage] = useState('');

  // Champs pour ajouter une police
  const [newFontName, setNewFontName] = useState('');
  const [newFontExtra, setNewFontExtra] = useState('');

  // Champs pour ajouter une couleur
  const [newColorName, setNewColorName] = useState('');
  const [newColorHex, setNewColorHex] = useState('');

  useEffect(() => {
    const sProds = getShopProducts();
    setShopItems(sProds);
    const pols = getPolices();
    setPolicesState(pols);
    const cols = getColors();
    setColorsState(cols);
  }, []);

  // G√©rer le shop
  function addProduct() {
    if (!newProdName || !newProdPrice || !newProdImage) return;
    const newId = shopItems.length > 0 ? shopItems[shopItems.length-1].id + 1 : 1;
    const newItem = {
      id: newId,
      name: newProdName,
      price: newProdPrice,
      image: newProdImage
    };
    const updated = [...shopItems, newItem];
    setShopItems(updated);
    saveShopProducts(updated);

    setNewProdName(''); setNewProdPrice(''); setNewProdImage('');
  }
  function removeProduct(id) {
    const updated = shopItems.filter((item) => item.id !== id);
    setShopItems(updated);
    saveShopProducts(updated);
  }

  // G√©rer polices
  function addFont() {
    if (!newFontName) return;
    const extra = parseFloat(newFontExtra) || 0;
    const updated = [...polices, { name: newFontName, extraCost: extra }];
    setPolicesState(updated);
    savePolices(updated);

    setNewFontName(''); setNewFontExtra('');
  }
  function removeFont(fontName) {
    const updated = polices.filter((f) => f.name !== fontName);
    setPolicesState(updated);
    savePolices(updated);
  }

  // G√©rer couleurs
  function addColor() {
    if (!newColorName || !newColorHex) return;
    const updated = [...colors, { name: newColorName, hex: newColorHex }];
    setColorsState(updated);
    saveColors(updated);

    setNewColorName(''); setNewColorHex('');
  }
  function removeColor(colorName) {
    const updated = colors.filter((c) => c.name !== colorName);
    setColorsState(updated);
    saveColors(updated);
  }

  return (
    <div style={{ padding: '20px' }}>
      <h2>Admin Dashboard</h2>

      <section style={{ marginBottom: '20px' }}>
        <h3>Produits du Shop</h3>
        <div>
          <input 
            type="text" placeholder="Nom" 
            value={newProdName} onChange={(e)=>setNewProdName(e.target.value)}
          />
          <input 
            type="text" placeholder="Prix ex: 129‚Ç¨"
            value={newProdPrice} onChange={(e)=>setNewProdPrice(e.target.value)}
          />
          <input 
            type="text" placeholder="URL de l'image"
            value={newProdImage} onChange={(e)=>setNewProdImage(e.target.value)}
          />
          <button onClick={addProduct}>Ajouter</button>
        </div>
        <ul>
          {shopItems.map(prod => (
            <li key={prod.id}>
              {prod.name} - {prod.price} 
              <img src={prod.image} alt={prod.name} style={{ width: '50px' }}/>
              <button onClick={()=>removeProduct(prod.id)}>Supprimer</button>
            </li>
          ))}
        </ul>
      </section>

      <section style={{ marginBottom: '20px' }}>
        <h3>Polices</h3>
        <div>
          <input 
            type="text" placeholder="Nom police"
            value={newFontName} onChange={(e)=>setNewFontName(e.target.value)}
          />
          <input 
            type="number" placeholder="Surco√ªt" step="0.1"
            value={newFontExtra} onChange={(e)=>setNewFontExtra(e.target.value)}
          />
          <button onClick={addFont}>Ajouter</button>
        </div>
        <ul>
          {polices.map((f, index) => (
            <li key={index}>
              {f.name} (surco√ªt: {f.extraCost})
              <button onClick={()=>removeFont(f.name)}>Supprimer</button>
            </li>
          ))}
        </ul>
      </section>

      <section style={{ marginBottom: '20px' }}>
        <h3>Couleurs</h3>
        <div>
          <input 
            type="text" placeholder="Nom Couleur"
            value={newColorName} onChange={(e)=>setNewColorName(e.target.value)}
          />
          <input 
            type="text" placeholder="Hex ex: #FF0000"
            value={newColorHex} onChange={(e)=>setNewColorHex(e.target.value)}
          />
          <button onClick={addColor}>Ajouter</button>
        </div>
        <ul>
          {colors.map((c, index) => (
            <li key={index}>
              {c.name} - {c.hex}
              <button onClick={()=>removeColor(c.name)}>Supprimer</button>
            </li>
          ))}
        </ul>
      </section>

      {/* On pourrait faire pareil pour pricingRules, etc. */}
    </div>
  );
}

export default AdminDashboard;

--------------------

Fichier: src/pages/Admin/AdminDashboard/_admin-dashboard.scss
Code:
/* site1/src/pages/Admin/AdminDashboard/_admin-dashboard.scss*/

.admin-dashboard {
    padding: 20px;
    max-width: 900px;
    margin: 40px auto;
    font-family: Arial, sans-serif;
  
    h2 {
      color: #0B1741;
      margin-bottom: 20px;
      text-align: center;
    }
  
    .logout-btn {
      background: #e53935;
      color: #fff;
      border: none;
      padding: 8px 16px;
      float: right;
      cursor: pointer;
      border-radius: 5px;
  
      &:hover {
        background: #b71c1c;
      }
    }
  
    .admin-section {
      margin-top: 60px;
  
      h3 {
        margin-bottom: 15px;
      }
  
      .admin-form {
        display: flex;
        gap: 10px;
        margin-bottom: 15px;
  
        input {
          flex: 1;
          padding: 8px;
          border: 1px solid #ccc;
          border-radius: 4px;
        }
  
        button {
          background: #0B1741;
          color: #fff;
          border: none;
          padding: 8px 16px;
          border-radius: 4px;
          cursor: pointer;
  
          &:hover {
            background: #162A64;
          }
        }
      }
  
      .product-list, .font-list, .color-list {
        list-style: none;
        padding: 0;
  
        li {
          margin-bottom: 10px;
          img {
            margin-left: 10px;
            vertical-align: middle;
          }
          button {
            margin-left: 10px;
            background: #e53935;
            color: #fff;
            border: none;
            padding: 5px 10px;
            cursor: pointer;
            border-radius: 4px;
            &:hover {
              background: #b71c1c;
            }
          }
        }
      }
    }
  }
  
--------------------

Fichier: src/pages/Admin/AdminDashboard/index.jsx
Code:
// site1/src/pages/Admin/AdminDashboard/index.jsx
import AdminDashboard from './AdminDashboard';

// traitement interm√©diaire ou logique sp√©cifique ici

export default AdminDashboard;


--------------------

Dossier: src/pages/Admin/AdminLogin

Fichier: src/pages/Admin/AdminLogin/AdminLogin.jsx
Code:
// src/pages/AdminLogin.jsx
import React, { useState } from 'react';
import { useAuth } from '../../../AuthContext';
import { useNavigate } from 'react-router-dom';

function AdminLogin() {
  const [password, setPassword] = useState("");
  const { login } = useAuth();
  const navigate = useNavigate();

  function handleSubmit(e) {
    e.preventDefault();
    if (login(password)) {
      navigate('/admin');
    } else {
      alert("Mot de passe incorrect");
    }
  }

  return (
    <div style={{ maxWidth: '400px', margin: '50px auto', textAlign: 'center' }}>
      <h2>Admin Login</h2>
      <form onSubmit={handleSubmit}>
        <input 
          type="password"
          placeholder="Mot de passe"
          value={password}
          onChange={e => setPassword(e.target.value)}
        />
        <button type="submit">Se connecter</button>
      </form>
    </div>
  );
}

export default AdminLogin;

--------------------

Fichier: src/pages/Admin/AdminLogin/_admin-login.scss
Code:
/* src/scss/_admin-login.scss */

.admin-login {
    max-width: 400px;
    margin: 50px auto;
    text-align: center;
    font-family: Arial, sans-serif;
  
    h2 {
      color: #0B1741;
      margin-bottom: 20px;
    }
  
    form {
      display: flex;
      flex-direction: column;
      gap: 10px;
  
      input {
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
      }
  
      button {
        background: #0B1741;
        color: #fff;
        border: none;
        border-radius: 4px;
        padding: 10px;
        cursor: pointer;
        &:hover {
          background: #162A64;
        }
      }
    }
  }
  
--------------------

Fichier: src/pages/Admin/AdminLogin/index.jsx
Code:
// site1/src/pages/Admin/AdminLogin/index.jsx
import AdminLogin from './AdminLogin';

// traitement interm√©diaire ou logique sp√©cifique ici

export default AdminLogin;

--------------------

Dossier: src/pages/Cart

Fichier: src/pages/Cart/CartPage.jsx
Code:
// src/pages/HomePage.jsx
import React from 'react';
import CartPageComponent from '../../components/CarteComponent/CartPageComponent';


function CartPage() {
  return (
    <div>

      {/* ‚úÖ Banni√®re Hero */}
      <CartPageComponent />
    </div>
  );
}

export default CartPage;
--------------------

Fichier: src/pages/Cart/index.jsx
Code:
// src/pages/Cart/index.jsx
import Cart from './CartPage';

// traitement interm√©diaire ou logique sp√©cifique ici

export default Cart;

--------------------

Dossier: src/pages/Checkout

Fichier: src/pages/Checkout/CheckoutPage.jsx
Code:
// src/pages/CheckoutPage.jsx
import React from 'react';

function CheckoutPage() {
  function handlePay() {
    alert('Paiement Stripe en cours...');
    // TODO: appel backend -> stripe create checkout session -> redirect
  }

  return (
    <div>
      <h2>Paiement</h2>
      <p>Montant total: ... ‚Ç¨</p>
      <button onClick={handlePay}>Payer avec Stripe</button>
    </div>
  );
}

export default CheckoutPage;

--------------------

Fichier: src/pages/Checkout/_checkout.scss
Code:
/* src/pages/Checkout/_checkout.scss */

.checkout-page {
    max-width: 800px;
    margin: 40px auto;
    font-family: Arial, sans-serif;
  
    h2 {
      text-align: center;
      color: #0B1741;
      margin-bottom: 20px;
    }
  
    .checkout-form {
      background: #fff;
      border: 1px solid #ddd;
      border-radius: 6px;
      padding: 20px;
  
      label {
        display: block;
        margin: 10px 0 5px;
      }
  
      input {
        width: 100%;
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
      }
  
      button {
        margin-top: 15px;
        background: #0B1741;
        color: #fff;
        border: none;
        border-radius: 6px;
        padding: 10px 20px;
        cursor: pointer;
  
        &:hover {
          background: #162A64;
        }
      }
    }
  }
  
--------------------

Fichier: src/pages/Checkout/index.jsx
Code:
//src/pages/Checkout/index.jsx
import Checkout from './CheckoutPage';

// traitement interm√©diaire ou logique sp√©cifique ici

export default Checkout;

--------------------

Dossier: src/pages/ContactIdea

Fichier: src/pages/ContactIdea/ContactIdeaPage.jsx
Code:
// src/pages/HomePage.jsx
import React from 'react';
import ContactIdeaComponent from '../../components/ContactIdeaComponent';


function ContactIdeaPage() {
  return (
    <div>

      {/* ‚úÖ Banni√®re Hero */}
      <ContactIdeaComponent />
    </div>
  );
}

export default ContactIdeaPage;
--------------------

Fichier: src/pages/ContactIdea/index.jsx
Code:
//src/pages/Checkout/index.jsx
import ContactIdea from './ContactIdeaPage';

// traitement interm√©diaire ou logique sp√©cifique ici

export default ContactIdea;

--------------------

Dossier: src/pages/Customize

Fichier: src/pages/Customize/CustomizeNeonPage.jsx
Code:
// src/pages/HomePage.jsx
import React from 'react';
import CustomizeNeonComponent from '../../components/CustomizeNeonComponent';


function CustomizeNeonPage() {
  return (
    <div>

      {/* ‚úÖ Banni√®re Hero */}
      <CustomizeNeonComponent />
    </div>
  );
}

export default CustomizeNeonPage;

--------------------

Fichier: src/pages/Customize/index.jsx
Code:
//src/pages/Checkout/index.jsx
import Customize from './CustomizeNeonPage';

// traitement interm√©diaire ou logique sp√©cifique ici

export default Customize;

--------------------

Dossier: src/pages/Home

Fichier: src/pages/Home/HomePage.jsx
Code:
// src/pages/HomePage.jsx
import React from 'react';
import CollapsibleRows from '../../components/Collapsible/CollapsibleRows';
import Carousel from '../../components/Carousel/Carousel';
import BannerHero from "../../components/BannerHero/BannerHero"; // ‚úÖ Importation de la banni√®re
import ThreeRows from '../../components/ThreeRows/ThreeRows';
import Newsletter from '../../components/Forms/Newsletter'; 
import ImageWithText from '../../components/ImageWithText/ImageWithText'



function HomePage() {
  return (
    <div>

      {/* ‚úÖ Banni√®re Hero */}
      <BannerHero />
      {/* ‚úÖ Ajout du Carrousel ICI */}
      <Carousel />
      {/* Multi-row ex. */}
      <ThreeRows />

      <ImageWithText />

      {/* Collapsible content */}
      <CollapsibleRows />

      <Newsletter />
    </div>
  );
}

export default HomePage;

--------------------

Fichier: src/pages/Home/index.jsx
Code:
//src/pages/Checkout/index.jsx
import Home from './HomePage';

// traitement interm√©diaire ou logique sp√©cifique ici

export default Home;

--------------------

Dossier: src/pages/Product

Fichier: src/pages/Product/ProductPage.jsx
Code:
import React from 'react';
import { useParams } from 'react-router-dom';
import { getShopProducts } from '../../services/dataService';
import { addToCart } from '../../services/cartService';
import './ProductPage.scss';

function ProductPage() {
  const { id } = useParams();
  const products = getShopProducts();
  const product = products.find((p) => p.id === Number(id));

  if (!product) {
    return <div className="product-page">Produit introuvable</div>;
  }

  const handleAddToCart = () => {
    addToCart(product);
    alert(`${product.name} ajout√© au panier !`);
  };

  return (
    <div className="product-page">
      <div className="product-card">
        <div className="product-image-wrapper">
          <img src={product.image} alt={product.name} className="product-image" />
        </div>
        <div className="product-details">
          <h2 className="product-title">{product.name}</h2>
          <p className="product-price">{product.price} ‚Ç¨</p>
          <button className="neon-button" onClick={handleAddToCart}>
            Ajouter au panier
          </button>
        </div>
      </div>
    </div>
  );
}

export default ProductPage;

--------------------

Fichier: src/pages/Product/ProductPage.scss
Code:
// src/pages/Product/ProductPage.scss

.product-page {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 2rem;
    background-color: #000; // ‚úÖ Fond coh√©rent noir global
    color: #fff;
    font-family: 'Mali', sans-serif;
  
    .product-card {
      display: flex;
      flex-direction: row;
      background: rgba(0, 0, 0, 0.9);
      border-radius: 15px;
      box-shadow:
        0 0 8px #7476ff,
        0 0 15px #0408fb;
      padding: 30px;
      max-width: 900px;
      width: 100%;
      gap: 2rem;
  
      .product-image-wrapper {
        flex: 1;
        display: flex;
        justify-content: center;
        align-items: center;
  
        .product-image {
          width: 100%;
          max-width: 350px;
          border-radius: 12px;
          box-shadow:
            0 0 8px rgba(116, 118, 255, 0.6),
            0 0 15px rgba(4, 8, 251, 0.8);
        }
      }
  
      .product-details {
        flex: 1;
        display: flex;
        flex-direction: column;
        justify-content: center;
  
        .product-title {
          font-size: 2rem;
          margin-bottom: 1rem;
          text-shadow: 0 0 10px #7476ff;
        }
  
        .product-price {
          font-size: 1.5rem;
          margin-bottom: 2rem;
          color: #FFD700;
          text-shadow: 0 0 8px #FFD700;
        }
  
        .neon-button {
          background: transparent;
          border: 2px solid #7476ff;
          color: #fff;
          padding: 12px 25px;
          border-radius: 25px;
          cursor: pointer;
          font-size: 1.1rem;
          transition: all 0.3s ease;
          box-shadow:
            0 0 10px #7476ff,
            inset 0 0 10px #0408fb;
  
          &:hover {
            background: #7476ff;
            box-shadow:
              0 0 15px #7476ff,
              inset 0 0 15px #0408fb;
          }
        }
      }
    }
  
    // ‚úÖ Mobile optimisation
    @media (max-width: 768px) {
      .product-card {
        flex-direction: column;
        align-items: center;
        padding: 20px;
  
        .product-image-wrapper {
          margin-bottom: 1.5rem;
        }
  
        .product-details {
          align-items: center;
          text-align: center;
        }
      }
    }
  }
  
--------------------

Fichier: src/pages/Product/index.Jsx
Code:
//src/pages/Checkout/index.jsx
import Product from './ProductPage';

// traitement interm√©diaire ou logique sp√©cifique ici

export default Product;

--------------------

Dossier: src/pages/Shop

Fichier: src/pages/Shop/ShopPage.jsx
Code:
import React, { useEffect, useState } from 'react';
import { Link } from 'react-router-dom';
import { getShopProducts } from '../../services/dataService';
import { addToCart } from '../../services/cartService';
import './ShopPage.scss';

function ShopPage() {
  const [products, setProducts] = useState([]);

  useEffect(() => {
    setProducts(getShopProducts());
  }, []);

  const handleAddToCart = (product) => {
    addToCart(product);
    alert(`${product.name} ajout√© au panier !`);
  };

  return (
    <div className="shop-page">
      <h2 className="shop-title">Nos N√©ons Pr√™ts √† l‚ÄôEmploi</h2>
      <div className="shop-grid">
        {products.map(product => (
          <div className="shop-item" key={product.id}>
            <img src={product.image} alt={product.name} className="product-img" />
            <h3 className="product-name">{product.name}</h3>
            <p className="product-price">{product.price} ‚Ç¨</p>
            <button className="neon-button" onClick={() => handleAddToCart(product)}>
              Ajouter au panier
            </button>
            <Link to={`/product/${product.id}`} className="detail-link">Voir le produit</Link>
          </div>
        ))}
      </div>
    </div>
  );
}

export default ShopPage;

--------------------

Fichier: src/pages/Shop/ShopPage.scss
Code:
// src/pages/Shop/ShopPage.scss

.shop-page {
    padding: 2rem;
    background-color: #000;
    color: #fff;
    font-family: 'Mali', sans-serif;
  
    .shop-title {
      text-align: center;
      margin-bottom: 2rem;
      font-size: 2.5rem;
      text-shadow: 0 0 12px #7476ff;
    }
  
    .shop-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 2rem;
  
      .shop-item {
        background: rgba(0, 0, 0, 0.8);
        padding: 1.5rem;
        border-radius: 12px;
        text-align: center;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        box-shadow:
          0 0 6px #7476ff,
          0 0 15px #0408fb;
  
        &:hover {
          transform: translateY(-10px);
          box-shadow:
            0 0 12px #7476ff,
            0 0 24px #0408fb;
        }
  
        .product-img-container {
          width: 100%;
          overflow: hidden;
          border-radius: 8px;
          margin-bottom: 1rem;
  
          .product-img {
            width: 100%;
            height: 200px;
            object-fit: cover;
            border-radius: 8px;
            transition: transform 0.3s ease;
  
            &:hover {
              transform: scale(1.1);
            }
          }
        }
  
        .product-name {
          font-size: 1.4rem;
          margin: 0.5rem 0;
          text-shadow: 0 0 6px #7476ff;
        }
  
        .product-price {
          color: #FFD700;
          font-size: 1.2rem;
          margin-bottom: 1rem;
          text-shadow: 0 0 8px #FFD700;
        }
  
        .neon-button {
          display: inline-block;
          background: transparent;
          color: #fff;
          text-decoration: none;
          border: 2px solid #7476ff;
          border-radius: 20px;
          padding: 8px 16px;
          transition: all 0.3s ease;
          box-shadow:
            0 0 8px #7476ff,
            inset 0 0 8px #0408fb;
  
          &:hover {
            background: #7476ff;
            box-shadow:
              0 0 12px #7476ff,
              inset 0 0 12px #0408fb;
            transform: scale(1.05);
          }
        }
      }
    }
  
    // ‚úÖ Optimisation mobile
    @media (max-width: 768px) {
      .shop-grid {
        gap: 1.5rem;
  
        .shop-item {
          padding: 1rem;
  
          .product-img {
            height: 180px;
          }
        }
      }
    }
  }
  
--------------------

Fichier: src/pages/Shop/index.jsx
Code:
//src/pages/Shop/index.jsx
import Shop from './ShopPage';

// traitement interm√©diaire ou logique sp√©cifique ici

export default Shop;

--------------------

Fichier: src/reportWebVitals.js
Code:
const reportWebVitals = onPerfEntry => {
  if (onPerfEntry && onPerfEntry instanceof Function) {
    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {
      getCLS(onPerfEntry);
      getFID(onPerfEntry);
      getFCP(onPerfEntry);
      getLCP(onPerfEntry);
      getTTFB(onPerfEntry);
    });
  }
};

export default reportWebVitals;

--------------------

Dossier: src/scss

Fichier: src/scss/App.scss
Code:
/* 1) Reset / base */
/*@import 'reset'; // ou la reset inline
/* 2) Variables / mixins */
@import 'variables';
@import 'buttons';
/* 3) Composants communs */
@import '../components/HeaderFooter/Header/header';
@import '../components/HeaderFooter/Footer/footer';
@import '../components/Collapsible/collapsible';
@import '../components/ImageWithText/_image-text';
@import '../components/Forms/Newsletter/newsletter';
@import '../components/CarteComponent/_cart';


/* 4) Global overrides */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}


// Ajout d'une font global
body {
  font-family: Mali, sans-serif;
  background-color: #000000;
  color: #333;
}

--------------------

Fichier: src/scss/ShopPage.scss
Code:
/* src/scss/ShopPage.scss */

.shop-page {
    max-width: 1000px;
    margin: 40px auto;
    padding: 0 20px;
    font-family: Arial, sans-serif;
  
    h2 {
      text-align: center;
      margin-bottom: 30px;
      color: #0B1741;
      font-size: 2rem;
    }
  
    .shop-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
      gap: 20px;
    }
  
    .shop-item {
      background: #fff;
      border: 1px solid #ddd;
      border-radius: 8px;
      padding: 20px;
      text-align: center;
  
      h3 {
        margin: 0 0 10px;
        color: #333;
      }
  
      .price {
        margin-bottom: 10px;
        color: #e53935;
        font-weight: bold;
      }
  
      button {
        background-color: #0B1741;
        color: #fff;
        border: none;
        border-radius: 5px;
        padding: 8px 16px;
        cursor: pointer;
        font-size: 1rem;
  
        &:hover {
          background-color: #162A64;
        }
      }
  
      .detail-link {
        display: inline-block;
        margin-top: 10px;
        color: #007bff;
        text-decoration: underline;
  
        &:hover {
          text-decoration: none;
        }
      }
    }
  }
  
--------------------

Fichier: src/scss/_admin.scss
Code:
// src/scss/_admin.scss

.admin-dashboard {
    max-width: 800px;
    margin: 0 auto;
    padding: 20px;
    font-family: Arial, sans-serif;
  
    h2 {
      text-align: center;
      margin-bottom: 30px;
    }
  
    .admin-section {
      background: #f8f8f8;
      padding: 20px;
      margin-bottom: 20px;
      border-radius: 8px;
  
      h3 {
        margin-bottom: 15px;
        color: #333;
      }
  
      .admin-form {
        display: flex;
        gap: 10px;
        margin-bottom: 15px;
  
        input {
          padding: 8px;
          border: 1px solid #ccc;
          border-radius: 4px;
          flex: 1;
        }
  
        button {
          background: #0B1741;
          color: #fff;
          border: none;
          padding: 10px 15px;
          border-radius: 4px;
          cursor: pointer;
  
          &:hover {
            background: #162A64;
          }
        }
      }
  
      .admin-list {
        list-style: none;
        padding: 0;
  
        li {
          background: #fff;
          margin-bottom: 5px;
          padding: 10px;
          border: 1px solid #ddd;
          border-radius: 4px;
          display: flex;
          justify-content: space-between;
          align-items: center;
  
          button {
            background: #e53935;
            color: #fff;
            border: none;
            border-radius: 4px;
            padding: 5px 10px;
            cursor: pointer;
  
            &:hover {
              background: #c62828;
            }
          }
        }
      }
    }
  }
  
--------------------

Fichier: src/scss/_buttons.scss
Code:
@import 'variables';

.button {
  display: inline-block;
  padding: 10px 20px;
  font-size: 16px;
  font-weight: bold;
  color: #fff;
  background: #0B1741;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: all 0.3s ease-in-out;

  &:hover {
    background: #162A64;
    transform: scale(1.05);
  }

  &:active {
    background: #09122B;
    transform: scale(0.98);
  }
}


--------------------

Fichier: src/scss/_product.scss
Code:
/* src/scss/_product.scss */

.product-page {
    max-width: 600px;
    margin: 40px auto;
    font-family: Arial, sans-serif;
    text-align: center;
  
    h2 {
      margin-bottom: 20px;
      color: #0B1741;
      font-size: 1.8rem;
    }
  
    img {
      max-width: 300px;
      margin-bottom: 15px;
    }
  
    .price {
      margin-bottom: 15px;
      font-weight: bold;
      color: #e53935;
    }
  
    button {
      background: #0B1741;
      color: #fff;
      padding: 10px 20px;
      border-radius: 6px;
      border: none;
      cursor: pointer;
  
      &:hover {
        background: #162A64;
      }
    }
  
    .back-link {
      display: inline-block;
      margin-top: 15px;
      text-decoration: underline;
      color: #333;
      &:hover {
        color: #0B1741;
      }
    }
  }
  
--------------------

Fichier: src/scss/_variables.scss
Code:
// Couleurs principales /home/ubuntu/site1/src/scss/_variables.scss
$primary-color: #007bff;
$secondary-color: #f8f9fa;
$text-color: #333;
$background-light: #f8f9fa; // <-- Cette variable doit √™tre d√©finie
// Bordures et animations
$border-radius: 8px;
$transition-speed: 0.3s;
--------------------

Fichier: src/scss/main.scss
Code:
@import 'variables';
@import 'buttons';
@import 'collapsible';
@import 'rows';
@import 'image-text';
@import "checkout";
@import "contact";

--------------------

Fichier: src/scss/mixins.scss
Code:
// src/scss/mixins.scss
@mixin example-mixin {
    font-weight: bold;
    text-transform: uppercase;
  }
  
--------------------

Fichier: src/secret.js
Code:
// src/secret.js
export const ADMIN_PASSWORD = "secret123";

--------------------

Dossier: src/services

Fichier: src/services/cartService.js
Code:
///home/ubuntu/site1/src/services/cartService.js

const CART_KEY = 'studio-neon-cart';

// R√©cup√®re le panier depuis localStorage
export function loadCart() {
  const cart = localStorage.getItem(CART_KEY);
  return cart ? JSON.parse(cart) : [];
}

// Sauvegarde le panier dans localStorage
export function saveCart(cart) {
  localStorage.setItem(CART_KEY, JSON.stringify(cart));
}

// Ajoute un produit au panier
export function addToCart(product) {
  const cart = loadCart();
  const existingItem = cart.find(item => item.id === product.id);

  if (existingItem) {
    existingItem.quantity += 1;
  } else {
    cart.push({ ...product, quantity: 1 });
  }

  saveCart(cart);
}

// Augmente la quantit√© d'un produit
export function incrementQuantity(productId) {
  const cart = loadCart();
  const item = cart.find(item => item.id === productId);

  if (item) {
    item.quantity += 1;
    saveCart(cart);
  }
}

// Diminue la quantit√© d'un produit
export function decrementQuantity(productId) {
  const cart = loadCart();
  const item = cart.find(item => item.id === productId);

  if (item && item.quantity > 1) {
    item.quantity -= 1;
    saveCart(cart);
  }
}

// Supprime un produit du panier
export function removeItem(productId) {
  let cart = loadCart();
  cart = cart.filter(item => item.id !== productId);
  saveCart(cart);
}

// Calcul le total du panier
export function calculateTotal() {
  const cart = loadCart();
  return cart.reduce((total, item) => total + item.price * item.quantity, 0);
}

--------------------

Fichier: src/services/dataService.js
Code:
// src/services/dataService.js

import policesJSON from '../data/polices.json';
import colorsJSON from '../data/colors.json';
import pricingJSON from '../data/pricingRules.json';
import shopJSON from '../data/shopProducts.json';

// On duplique en variable JS qu'on peut modifier.
let policesData = [...policesJSON];
let colorsData = [...colorsJSON];
let pricingData = { ...pricingJSON };
let shopProducts = [...shopJSON];

// ----- FONCTIONS DE LECTURE ----- //
export function getPolices() {
  return policesData;
}
export function getColors() {
  return colorsData;
}
export function getPricingRules() {
  return pricingData;
}
export function getShopProducts() {
  return shopProducts;
}

// ----- FONCTIONS D'√âCRITURE (SIMULATION) ----- //
export function savePolices(updatedPolices) {
  policesData = updatedPolices;
}
export function saveColors(updatedColors) {
  colorsData = updatedColors;
}
export function savePricing(updatedPricing) {
  pricingData = updatedPricing;
}
export function saveShopProducts(updatedShop) {
  shopProducts = updatedShop;
}

--------------------

Fichier: src/services/productService.js
Code:
// src/services/productService.js

// Mocks : on stocke en localStorage (ou dans un fichier .json si c'√©tait Node)
const PRODUCT_KEY = 'neons-data';

export function loadProducts() {
  const raw = localStorage.getItem(PRODUCT_KEY);
  if (raw) {
    return JSON.parse(raw);
  }
  // Valeurs par d√©faut s'il n'y a rien
  return [
    { id: 1, name: "N√©on Rouge", price: "129‚Ç¨", image: "https://picsum.photos/200/300?red" },
    { id: 2, name: "N√©on Bleu", price: "149‚Ç¨", image: "https://picsum.photos/200/300?blue" },
  ];
}

export function saveProducts(products) {
  localStorage.setItem(PRODUCT_KEY, JSON.stringify(products));
}

--------------------

Fichier: src/setupTests.js
Code:
// jest-dom adds custom jest matchers for asserting on DOM nodes.
// allows you to do things like:
// expect(element).toHaveTextContent(/react/i)
// learn more: https://github.com/testing-library/jest-dom
import '@testing-library/jest-dom';

--------------------
