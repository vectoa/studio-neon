

Fichier: src/App.jsx
Code:
// src/App.jsx
import React from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';

import Header from './components/Header';
import Footer from './components/Footer';

import { AuthProvider } from './AuthContext';
import ProtectedRoute from './ProtectedRoute';

import HomePage from './pages/HomePage';
import AdminLogin from './pages/AdminLogin';
import AdminDashboard from './pages/AdminDashboard';


import ShopPage from './pages/ShopPage';
import CustomizeNeonPage from './pages/CustomizeNeonPage';
import ContactIdeaPage from './pages/ContactIdeaPage';
import CartPage from './pages/CartPage';
import CheckoutPage from './pages/CheckoutPage';
import ProductPage from './pages/ProductPage';


import './scss/App.scss';

function App() {
  return (
    <AuthProvider>
      <Router>
        <Header />
        <main>
          <Routes>
            <Route path="/" element={<HomePage />} />
            <Route path="/shop" element={<ShopPage />} />
            <Route path="/customize" element={<CustomizeNeonPage />} />
            <Route path="/contact-idea" element={<ContactIdeaPage />} />
            <Route path="/cart" element={<CartPage />} />
            <Route path="/checkout" element={<CheckoutPage />} />
            <Route path="/product/:id" element={<ProductPage />} />
            

            {/* Page de login admin */}
            <Route path="/admin-login" element={<AdminLogin />} />

            {/* Page admin protégée */}
            <Route 
              path="/admin" 
              element={
                <ProtectedRoute>
                  <AdminDashboard />
                </ProtectedRoute>
              }
            />
          </Routes>
        </main>
        <Footer />
      </Router>
    </AuthProvider>
  );
}

export default App;

--------------------

Fichier: src/AuthContext.js
Code:
// src/AuthContext.js
import React, { createContext, useState, useContext } from 'react';
import { ADMIN_PASSWORD } from './secret';

const AuthContext = createContext();

export function AuthProvider({ children }) {
  const [authenticated, setAuthenticated] = useState(false);

  function login(password) {
    if (password === ADMIN_PASSWORD) {
      setAuthenticated(true);
      return true;
    }
    return false;
  }

  function logout() {
    setAuthenticated(false);
  }

  return (
    <AuthContext.Provider value={{ authenticated, login, logout }}>
      {children}
    </AuthContext.Provider>
  );
}

export function useAuth() {
  return useContext(AuthContext);
}

--------------------

Fichier: src/ProtectedRoute.jsx
Code:
// src/ProtectedRoute.jsx
import React from 'react';
import { useAuth } from './AuthContext';
import { Navigate } from 'react-router-dom';

function ProtectedRoute({ children }) {
  const { authenticated } = useAuth();
  if (!authenticated) {
    return <Navigate to="/admin-login" replace />;
  }
  return children;
}

export default ProtectedRoute;

--------------------

Dossier: src/components

Dossier: src/components/BannerHero

Fichier: src/components/BannerHero/BannerHero.jsx
Code:
// src/components/BannerHero.jsx
import React from 'react';
import './BannerHero.scss'; // scss facultatif
import { Link } from 'react-router-dom';

function BannerHero() {
  return (
    <section className="banner-hero"
      style={{ backgroundImage: 'url(/images/hero.png)' }} // example
    >
      <div className="banner-content">
        <h2>Spécialiste du neon</h2>
        <p>Découvrez une collection unique et personnalisez votre neon en quelques clics</p>
        <div className="banner-buttons">
        <button>
        <Link to="/shop">Découvrir la boutique</Link>
        </button>
        <button>
        <Link to="/customize">Créer mon néon</Link>
        </button>
          
        </div>
      </div>
    </section>
  );
}
export default BannerHero;

--------------------

Fichier: src/components/BannerHero/BannerHero.scss
Code:
.banner-hero {
  width: 100%;
  height: 400px;
  background-size: cover;
  background-position: center;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  color: white;

  .banner-content {
    background: rgba(0, 0, 0, 0.5); // Effet de transparence
    padding: 20px;
    border-radius: 10px;
    max-width: 80%; // Évite un contenu trop large
    display: flex;
    flex-direction: column;
    align-items: center;

    h2 {
      font-size: 2.5rem;
      margin-bottom: 10px;
    }

    p {
      font-size: 1.2rem;
      margin-bottom: 15px;
      max-width: 600px; // Évite un texte trop long
    }

    .banner-buttons {
      display: flex;
      flex-direction: column; // ✅ Change les boutons en colonne
      align-items: center;
      gap: 10px; // ✅ Ajoute un espace entre les boutons
      margin-top: 15px;

      button {
        width: 400px; // ✅ Donne une largeur uniforme aux boutons
        padding: 10px 20px;
        background-color: #ff6b6b;
        border: none;
        color: white;
        cursor: pointer;
        font-size: 1rem;
        border-radius: 5px;
        transition: background 0.3s, transform 0.2s;

        &:hover {
          background-color: #e63946;
          transform: scale(1.05); // ✅ Ajoute un léger effet au survol
        }
        a {
          color: #fff;
          text-decoration: none;
        
          &:hover {
            text-decoration: underline; /* Ou rien */
          }
        }
        
      }
    }
  }
}

--------------------

Fichier: src/components/BannerHero/index.jsx
Code:
import BannerHero from './BannerHero';

// traitement intermédiaire ou logique spécifique ici

export default BannerHero;

--------------------

Dossier: src/components/Carousel

Fichier: src/components/Carousel/Carousel.jsx
Code:
// src/components/Carousel.jsx
import React, { useEffect, useState } from "react";
import { Swiper, SwiperSlide } from "swiper/react";
import "swiper/css";
import "swiper/css/navigation";
import { Navigation } from "swiper/modules";
import "./Carousel.scss";

import { getShopProducts } from "../../services/dataService";


import { Link } from 'react-router-dom';

const Carousel = () => {
  const [products, setProducts] = useState([]);

  useEffect(() => {
    const data = getShopProducts();
    setProducts(data);
  }, []);

  return (
    <section className="carousel-section">
      <h2 className="carousel-title">Nos Néons Prêts à l'Emploi</h2>
      <Swiper
        navigation
        modules={[Navigation]}
        spaceBetween={20}
        slidesPerView={3}
        breakpoints={{
          768: { slidesPerView: 2 },
          480: { slidesPerView: 1 },
        }}
      >
        {products.map((product) => (
          <SwiperSlide key={product.id} className="carousel-item">
            <img src={product.image} alt={product.name} />
            <h3>{product.name}</h3>
            <p className="price">{product.price} €</p>
            <button className="buy-btn">
            <Link to={`/product/${product.id}`}>Acheter</Link>
            </button>

          </SwiperSlide>
        ))}
      </Swiper>
    </section>
  );
};

export default Carousel;

--------------------

Fichier: src/components/Carousel/Carousel.scss
Code:
.carousel-section {
    text-align: center;
    padding: 2rem;
    background: #f8f9fa;
  
    .carousel-title {
      font-size: 2rem;
      margin-bottom: 1.5rem;
      color: #1a1a1a;
    }
  
    .swiper {
      width: 100%;
      padding: 1rem 0;
    }
  
    .carousel-item {
      background: white;
      padding: 1rem;
      border-radius: 10px;
      text-align: center;
      box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
      transition: transform 0.3s;
  
      img {
        width: 100%;
        max-height: 180px;
        object-fit: cover;
        border-radius: 5px;
      }
  
      h3 {
        font-size: 1.2rem;
        margin: 0.5rem 0;
      }
  
      .price {
        color: #ff6b6b;
        font-weight: bold;
        font-size: 1.1rem;
      }
  
      .buy-btn {
        margin-top: 10px;
        padding: 10px 15px;
        background: #007bff;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background 0.3s;
  
        &:hover {
          background: #0056b3;
        }
      }
  
      &:hover {
        transform: translateY(-5px);
      }
    }
  }
  
--------------------

Fichier: src/components/Carousel/index.jsx
Code:
import Carousel from './Carousel';

// traitement intermédiaire ou logique spécifique ici

export default Carousel;

--------------------

Fichier: src/components/CartPageComponent.jsx
Code:
// src/pages/CartPageComponent.jsx
import React, { useState } from 'react';
import '../scss/_cart.scss';

const initialItems = [
  { id: 1, name: 'néon personnalisé', price: 0, quantity: 1 },
];

function CartPage() {
  const [items, setItems] = useState(initialItems);

  const increment = (id) => {
    setItems(items.map(item => item.id === id ? { ...item, quantity: item.quantity + 1 } : item));
  };

  const decrement = (id) => {
    setItems(items.map(item => item.id === id && item.quantity > 1 ? { ...item, quantity: item.quantity - 1 } : item));
  };

  const removeItem = (id) => {
    setItems(items.filter(item => item.id !== id));
  };

  const totalPrice = items.reduce((total, item) => total + item.price * item.quantity, 0);

  return (
    <div className="cart-page">
      <div className="cart-header">
        <h2>Votre panier</h2>
        <a href="/shop">Continuer les achats</a>
      </div>
      {items.length === 0 ? (
        <p className="empty-cart">Votre panier est vide.</p>
      ) : (
        <>
          <div className="cart-table">
            <div className="cart-row cart-header-row">
              <span className="product-title">Produit</span>
              <span className="quantity-title">Quantité</span>
              <span className="total-title">Total</span>
            </div>

            {items.map(item => (
              <div key={item.id} className="cart-row">
                <div className="product-info">
                  <p className="product-name">{item.name}</p>
                  <p className="product-price">{item.price.toFixed(2)} €</p>
                </div>
                <div className="quantity-control">
                  <button onClick={() => decrement(item.id)}>-</button>
                  <span>{item.quantity}</span>
                  <button onClick={() => increment(item.id)}>+</button>
                  <button className="remove-item" onClick={() => removeItem(item.id)}>🗑️</button>
                </div>
                <div className="product-total">
                  {(item.price * item.quantity).toFixed(2)} €
                </div>
              </div>
            ))}
          </div>

          <div className="cart-summary">
            <p>Total estimé <span>{totalPrice.toFixed(2)} EUR</span></p>
            <p className="small-note">Taxes incluses. Rabais et frais de port calculés lors du paiement.</p>
            <button className="checkout-btn">Vérifier</button>
          </div>
        </>
      )}
    </div>
  );
}

export default CartPage;

--------------------

Fichier: src/components/CollapsibleRow.jsx
Code:
import React, { useState, useRef, useEffect } from 'react';

function CollapsibleRow({ title, children }) {
  const [open, setOpen] = useState(false);
  const contentRef = useRef(null);
  const [maxHeight, setMaxHeight] = useState('0px');

  useEffect(() => {
    if (contentRef.current) {
      setMaxHeight(open ? `${contentRef.current.scrollHeight}px` : '0px');
    }
  }, [open, children]);

  return (
    <div className={`studio-collapsible-row ${open ? "open" : ""}`} onClick={() => setOpen(!open)}>
      <div className="studio-collapsible-header">
        <span className="studio-collapsible-icon">{open ? '✔️' : '☐'}</span>
        <span className="studio-collapsible-title">{title}</span>
        <span className={`studio-arrow ${open ? "open" : ""}`}>&#9662;</span>
      </div>
      <div 
        ref={contentRef} 
        className={`studio-collapsible-content ${open ? "open" : ""}`}
        style={{ maxHeight: maxHeight }}
      >
        {children}
      </div>
    </div>
  );
}

export default CollapsibleRow;

--------------------

Fichier: src/components/CollapsibleRows.jsx
Code:
import React from 'react';
import CollapsibleRow from './CollapsibleRow';
import '../scss/_collapsible.scss'; // Assure-toi d'importer le SCSS avec les classes préfixées

function CollapsibleRows() {
  return (
    <section className="studio-collapsible-section">
      <h2>FAQ</h2>
      <CollapsibleRow title="Pourquoi choisir nos néons ?">
      <ul>
        <li>Fabrication de qualité avec des matériaux durables.</li>
        <li>Garantie 1 an incluse sur tous les produits.</li>
        <li>Service client réactif et suivi à chaque étape.</li>
      </ul>
      </CollapsibleRow>
      <CollapsibleRow title="Quelles tailles et couleurs sont disponibles ?">
      <ul>
      <li>Tailles : 50 cm à 300 cm.</li>
      <li>Couleurs : 14 options vibrantes, parfaites pour tous les styles.</li>
      </ul>
      </CollapsibleRow>
      <CollapsibleRow title="Quels sont les délais de livraison ?">
      <ul>
      <li>Production rapide : 4 à 6 jours ouvrables.</li>
      <li>Livraison en France sous 7 à 13 jours.</li>
      </ul>
      </CollapsibleRow>
      <CollapsibleRow title="Que faire en cas de problème ?">
      <ul>
      <li>Garantie d’un an pour tout défaut.</li>
      <li>Remplacement ou remboursement en cas de dommage à la livraison.</li>
        </ul>
      </CollapsibleRow>
    </section>
  );
}

export default CollapsibleRows;

--------------------

Fichier: src/components/ContactIdeaComponent.jsx
Code:
// src/components/ContactIdeaComponent.jsx
import '../scss/_contact.scss';
import React, { useState } from 'react';

function ContactIdeaComponent() {
  const [name, setName] = useState('');
  const [email, setEmail] = useState('');
  const [idea, setIdea] = useState('');
  const [file, setFile] = useState(null);

  function handleSubmit(e) {
    e.preventDefault();
    alert(`Projet envoyé: ${name}, ${email}, ${idea}, file? ${file?.name}`);
    // TODO: un appel API pour stocker / mailer
  }

  
  return (
    <div>
      <h2>Envoyez-nous votre idée/projet</h2>
      <form onSubmit={handleSubmit} style={{ maxWidth: 400 }}>
        <label>Nom</label>
        <input value={name} onChange={e => setName(e.target.value)} required />
        <label>Email</label>
        <input type="email" value={email} onChange={e => setEmail(e.target.value)} required />
        <label>Description du projet</label>
        <textarea value={idea} onChange={e => setIdea(e.target.value)} rows={4} />
        <label>Upload Logo/Photo (optionnel)</label>
        <input type="file" onChange={e => setFile(e.target.files[0])} />
        <button type="submit">Envoyer</button>
      </form>
    </div>
  );
}

export default ContactIdeaComponent;

--------------------

Fichier: src/components/ContactIdeaForm.jsx
Code:
// src/pages/ContactIdeaPage.jsx
import '../scss/_contact.scss';
import React, { useState } from 'react';

function ContactIdeaPage() {
  const [name, setName] = useState('');
  const [email, setEmail] = useState('');
  const [idea, setIdea] = useState('');
  const [file, setFile] = useState(null);

  function handleSubmit(e) {
    e.preventDefault();
    alert(`Projet envoyé: ${name}, ${email}, ${idea}, file? ${file?.name}`);
    // TODO: un appel API pour stocker / mailer
  }

  return (
    <div>
      <h2>Envoyez-nous votre idée/projet</h2>
      <form onSubmit={handleSubmit} style={{ maxWidth: 400 }}>
        <label>Nom</label>
        <input value={name} onChange={e => setName(e.target.value)} required />
        <label>Email</label>
        <input type="email" value={email} onChange={e => setEmail(e.target.value)} required />
        <label>Description du projet</label>
        <textarea value={idea} onChange={e => setIdea(e.target.value)} rows={4} />
        <label>Upload Logo/Photo (optionnel)</label>
        <input type="file" onChange={e => setFile(e.target.files[0])} />
        <button type="submit">Envoyer</button>
      </form>
    </div>
  );
}

export default ContactIdeaPage;

--------------------

Fichier: src/components/CustomizeNeonComponent.jsx
Code:
// src/pages/CustomizeNeonComponent.jsx
import React, { useState } from 'react';
import '../scss/_customize-neon.scss';

function CustomizeNeonComponent() {
  const [size, setSize] = useState('50');
  const [text, setText] = useState('');
  const [font, setFont] = useState('0'); // surcoût 0 ou 10
  const [color, setColor] = useState('#FF0000');
  const [panel, setPanel] = useState('0'); // 0 => opaque, 1 => transparent
  const pricePerChar = 1;

  function computePrice() {
    const sizeNum = parseFloat(size) || 0;
    const fontNum = parseFloat(font) || 0;
    const panelNum = parseFloat(panel) || 0;
    const base = sizeNum + (text.length * pricePerChar) + fontNum;
    let total = base;
    if (panelNum === 1) {
      total *= 1.11; // +11%
    }
    return total.toFixed(2);
  }

  function handleAddToCart() {
    alert(`Néon perso ajouté au panier. Prix: ${computePrice()}€`);
  }

  return (
    <div className="customize-neon">
      <h2>Personnalisez Votre Néon</h2>

      {/* ✅ Aperçu du Néon sous le titre */}
      <div className="customize-preview">
        <div
          className="preview-box"
          style={{
            background: panel === '1' ? 'rgba(0,0,0,0.8)' : '#202020',
            border: panel === '1' ? '2px dashed rgba(255,255,255,0.3)' : 'none'
          }}
        >
          <span
            className="preview-text"
            style={{
              color: color,
              fontFamily: font === '10' ? 'Cursive' : 'Helvetica',
              textShadow: `0 0 5px ${color}, 0 0 10px ${color}`
            }}
          >
            {text || 'Votre néon ici'}
          </span>
        </div>
      </div>

      {/* ✅ Formulaire sous l'aperçu */}
      <div className="customize-form">
        <label>Taille</label>
        <select value={size} onChange={e => setSize(e.target.value)}>
          <option value="50">50cm (+50€)</option>
          <option value="75">75cm (+75€)</option>
          <option value="100">100cm (+100€)</option>
        </select>

        <label>Texte (max 30 char)</label>
        <input
          type="text"
          maxLength={30}
          value={text}
          onChange={e => setText(e.target.value)}
        />

        <label>Police</label>
        <select value={font} onChange={e => setFont(e.target.value)}>
          <option value="0">Helvetica (+0€)</option>
          <option value="10">Autre (+10€)</option>
        </select>

        <label>Couleur</label>
        <select value={color} onChange={e => setColor(e.target.value)}>
          <option value="#FF0000">Rouge</option>
          <option value="#FFC0CB">Rose clair</option>
          <option value="#FFA500">Orange</option>
          <option value="#FFFF00">Jaune</option>
          <option value="#FFD700">Gold</option>
          <option value="#00FF00">Vert</option>
          <option value="#0000FF">Bleu</option>
          <option value="#ADD8E6">Bleu glacé</option>
          <option value="#800080">Violet</option>
          <option value="#FFFFFF">Blanc froid</option>
          <option value="#F5DEB3">Blanc chaud</option>
        </select>

        <label>Type de Panneau</label>
        <select value={panel} onChange={e => setPanel(e.target.value)}>
          <option value="0">Opaque (+0%)</option>
          <option value="1">Transparent (+11%)</option>
        </select>

        <div className="price">
          Prix: {computePrice()} €
        </div>
        <button onClick={handleAddToCart}>Ajouter au panier</button>
      </div>
    </div>
  );
}

export default CustomizeNeonComponent;

--------------------

Fichier: src/components/Footer.jsx
Code:
// src/components/Footer.jsx
import React from 'react';
import '../scss/App.scss'; // Assurez-vous que les styles sont bien inclus

function Footer() {
  return (
    <footer className="footer">
      <p>© 2025 - Tous droits réservés | <a href="/mentions-legales">Mentions légales</a></p>
    </footer>
  );
}

export default Footer;

--------------------

Fichier: src/components/Header.jsx
Code:
import React from 'react';
import { Link } from 'react-router-dom';
import '../scss/App.scss'; // ✅ Import des styles globaux

function Header() {
  return (
    <header className="header">
      <div className="logo">
        <Link to="/">STUDIO NEON</Link>
      </div>
      <nav className="nav-links">
        <Link to="/shop">Shop</Link>
        <Link to="/customize">Personnaliser</Link>
        <Link to="/contact-idea">Projet</Link>
        <Link to="/cart">Panier</Link>
      </nav>
    </header>
  );
}

export default Header;

--------------------

Fichier: src/components/ImageWithText.jsx
Code:
import React from 'react';
import '../scss/App.scss'; // ✅ Import des styles

function ImageWithText() {
  return (
    <section className="image-with-text">
      <img src="/images/tshirt.png" alt="ex" className="image-with-text__img" />
      <div>
        <h3>Image with text</h3>
        <p>Pair text with an image to focus on your chosen product, collection, or blog post.</p>
        <button className="button">Bouton label</button>
      </div>
    </section>
  );
}

export default ImageWithText;

--------------------

Fichier: src/components/Newsletter.jsx
Code:
import React from 'react';
import '../scss/App.scss'; // ✅ Import des styles

function Newsletter() {
  return (
    <section className="newsletter-section">
      <h2>Subscribe to our emails</h2>
      <p>Be the first to know about new collections and exclusive offers.</p>
      <input type="email" placeholder="Email" />
      <button className="button">→</button>
    </section>
  );
}

export default Newsletter;

--------------------

Fichier: src/components/ThreeRows.jsx
Code:
import React from 'react';
import '../scss/ThreeRows.scss'; // ✅ Import du style

const ThreeRows = () => {
  return (
    <section className="three-rows">
      <div>
        <h3>Row 1</h3>
        <p>Some content or CTA.</p>
      </div>
      <div>
        <h3>Row 2</h3>
        <p>Some content or CTA.</p>
      </div>
      <div>
        <h3>Row 3</h3>
        <p>Some content or CTA.</p>
      </div>
    </section>
  );
};

export default ThreeRows;

--------------------

Dossier: src/data

Fichier: src/data/colors.json
Code:
[
    { "name": "Rouge", "hex": "#FF0000" },
    { "name": "Bleu", "hex": "#0000FF" },
    { "name": "Vert", "hex": "#00FF00" }
  ]
  
--------------------

Fichier: src/data/polices.json
Code:
[
    { "name": "Helvetica", "extraCost": 0 },
    { "name": "Arial", "extraCost": 1 }
  ]
  
--------------------

Fichier: src/data/pricingRules.json
Code:
{
    "sizes": {
      "50cm": 50,
      "75cm": 75,
      "100cm": 100
    },
    "panelExtra": 1.11 
  }
  
--------------------

Fichier: src/data/shopProducts.json
Code:
[
    {
      "id": 1,
      "name": "Néon Hello",
      "price": 50,
      "image": "/images/neonHello.jpg"
    },
    {
      "id": 2,
      "name": "Néon Open",
      "price": 60,
      "image": "/images/neonOpen.jpg"
    },
    {
      "id": 3,
      "name": "Néon Love",
      "price": 70,
      "image": "/images/neonLove.jpg"
    }
  ]
  
--------------------

Fichier: src/header.jsx
Code:

--------------------

Fichier: src/index.css
Code:
body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

--------------------

Fichier: src/index.jsx
Code:
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';
import './scss/App.scss';


const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();

--------------------

Fichier: src/logo.svg
Code:
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 841.9 595.3"><g fill="#61DAFB"><path d="M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z"/><circle cx="420.9" cy="296.5" r="45.7"/><path d="M520.5 78.1z"/></g></svg>
--------------------

Dossier: src/pages

Fichier: src/pages/AdminDashboard.jsx
Code:
// src/pages/AdminDashboard.jsx
import React, { useEffect, useState } from 'react';
import { 
  getShopProducts, saveShopProducts,
  getPolices, savePolices,
  getColors, saveColors
} from '../services/dataService';

function AdminDashboard() {
  const [shopItems, setShopItems] = useState([]);
  const [polices, setPolicesState] = useState([]);
  const [colors, setColorsState] = useState([]);

  // Champs pour ajouter un nouveau produit
  const [newProdName, setNewProdName] = useState('');
  const [newProdPrice, setNewProdPrice] = useState('');
  const [newProdImage, setNewProdImage] = useState('');

  // Champs pour ajouter une police
  const [newFontName, setNewFontName] = useState('');
  const [newFontExtra, setNewFontExtra] = useState('');

  // Champs pour ajouter une couleur
  const [newColorName, setNewColorName] = useState('');
  const [newColorHex, setNewColorHex] = useState('');

  useEffect(() => {
    const sProds = getShopProducts();
    setShopItems(sProds);
    const pols = getPolices();
    setPolicesState(pols);
    const cols = getColors();
    setColorsState(cols);
  }, []);

  // Gérer le shop
  function addProduct() {
    if (!newProdName || !newProdPrice || !newProdImage) return;
    const newId = shopItems.length > 0 ? shopItems[shopItems.length-1].id + 1 : 1;
    const newItem = {
      id: newId,
      name: newProdName,
      price: newProdPrice,
      image: newProdImage
    };
    const updated = [...shopItems, newItem];
    setShopItems(updated);
    saveShopProducts(updated);

    setNewProdName(''); setNewProdPrice(''); setNewProdImage('');
  }
  function removeProduct(id) {
    const updated = shopItems.filter((item) => item.id !== id);
    setShopItems(updated);
    saveShopProducts(updated);
  }

  // Gérer polices
  function addFont() {
    if (!newFontName) return;
    const extra = parseFloat(newFontExtra) || 0;
    const updated = [...polices, { name: newFontName, extraCost: extra }];
    setPolicesState(updated);
    savePolices(updated);

    setNewFontName(''); setNewFontExtra('');
  }
  function removeFont(fontName) {
    const updated = polices.filter((f) => f.name !== fontName);
    setPolicesState(updated);
    savePolices(updated);
  }

  // Gérer couleurs
  function addColor() {
    if (!newColorName || !newColorHex) return;
    const updated = [...colors, { name: newColorName, hex: newColorHex }];
    setColorsState(updated);
    saveColors(updated);

    setNewColorName(''); setNewColorHex('');
  }
  function removeColor(colorName) {
    const updated = colors.filter((c) => c.name !== colorName);
    setColorsState(updated);
    saveColors(updated);
  }

  return (
    <div style={{ padding: '20px' }}>
      <h2>Admin Dashboard</h2>

      <section style={{ marginBottom: '20px' }}>
        <h3>Produits du Shop</h3>
        <div>
          <input 
            type="text" placeholder="Nom" 
            value={newProdName} onChange={(e)=>setNewProdName(e.target.value)}
          />
          <input 
            type="text" placeholder="Prix ex: 129€"
            value={newProdPrice} onChange={(e)=>setNewProdPrice(e.target.value)}
          />
          <input 
            type="text" placeholder="URL de l'image"
            value={newProdImage} onChange={(e)=>setNewProdImage(e.target.value)}
          />
          <button onClick={addProduct}>Ajouter</button>
        </div>
        <ul>
          {shopItems.map(prod => (
            <li key={prod.id}>
              {prod.name} - {prod.price} 
              <img src={prod.image} alt={prod.name} style={{ width: '50px' }}/>
              <button onClick={()=>removeProduct(prod.id)}>Supprimer</button>
            </li>
          ))}
        </ul>
      </section>

      <section style={{ marginBottom: '20px' }}>
        <h3>Polices</h3>
        <div>
          <input 
            type="text" placeholder="Nom police"
            value={newFontName} onChange={(e)=>setNewFontName(e.target.value)}
          />
          <input 
            type="number" placeholder="Surcoût" step="0.1"
            value={newFontExtra} onChange={(e)=>setNewFontExtra(e.target.value)}
          />
          <button onClick={addFont}>Ajouter</button>
        </div>
        <ul>
          {polices.map((f, index) => (
            <li key={index}>
              {f.name} (surcoût: {f.extraCost})
              <button onClick={()=>removeFont(f.name)}>Supprimer</button>
            </li>
          ))}
        </ul>
      </section>

      <section style={{ marginBottom: '20px' }}>
        <h3>Couleurs</h3>
        <div>
          <input 
            type="text" placeholder="Nom Couleur"
            value={newColorName} onChange={(e)=>setNewColorName(e.target.value)}
          />
          <input 
            type="text" placeholder="Hex ex: #FF0000"
            value={newColorHex} onChange={(e)=>setNewColorHex(e.target.value)}
          />
          <button onClick={addColor}>Ajouter</button>
        </div>
        <ul>
          {colors.map((c, index) => (
            <li key={index}>
              {c.name} - {c.hex}
              <button onClick={()=>removeColor(c.name)}>Supprimer</button>
            </li>
          ))}
        </ul>
      </section>

      {/* On pourrait faire pareil pour pricingRules, etc. */}
    </div>
  );
}

export default AdminDashboard;

--------------------

Fichier: src/pages/AdminLogin.jsx
Code:
// src/pages/AdminLogin.jsx
import React, { useState } from 'react';
import { useAuth } from '../AuthContext';
import { useNavigate } from 'react-router-dom';

function AdminLogin() {
  const [password, setPassword] = useState("");
  const { login } = useAuth();
  const navigate = useNavigate();

  function handleSubmit(e) {
    e.preventDefault();
    if (login(password)) {
      navigate('/admin');
    } else {
      alert("Mot de passe incorrect");
    }
  }

  return (
    <div style={{ maxWidth: '400px', margin: '50px auto', textAlign: 'center' }}>
      <h2>Admin Login</h2>
      <form onSubmit={handleSubmit}>
        <input 
          type="password"
          placeholder="Mot de passe"
          value={password}
          onChange={e => setPassword(e.target.value)}
        />
        <button type="submit">Se connecter</button>
      </form>
    </div>
  );
}

export default AdminLogin;

--------------------

Fichier: src/pages/CartPage.jsx
Code:
// src/pages/HomePage.jsx
import React from 'react';
import CartPageComponent from '../components/CartPageComponent';


function CartPage() {
  return (
    <div>

      {/* ✅ Bannière Hero */}
      <CartPageComponent />
    </div>
  );
}

export default CartPage;
--------------------

Fichier: src/pages/CheckoutPage.jsx
Code:
// src/pages/CheckoutPage.jsx
import React from 'react';

function CheckoutPage() {
  function handlePay() {
    alert('Paiement Stripe en cours...');
    // TODO: appel backend -> stripe create checkout session -> redirect
  }

  return (
    <div>
      <h2>Paiement</h2>
      <p>Montant total: ... €</p>
      <button onClick={handlePay}>Payer avec Stripe</button>
    </div>
  );
}

export default CheckoutPage;

--------------------

Fichier: src/pages/ContactIdeaPage.jsx
Code:
// src/pages/HomePage.jsx
import React from 'react';
import ContactIdeaComponent from '../components/ContactIdeaComponent';


function ContactIdeaPage() {
  return (
    <div>

      {/* ✅ Bannière Hero */}
      <ContactIdeaComponent />
    </div>
  );
}

export default ContactIdeaPage;
--------------------

Fichier: src/pages/CustomizeNeonPage.jsx
Code:
// src/pages/HomePage.jsx
import React from 'react';
import CustomizeNeonComponent from '../components/CustomizeNeonComponent';


function CustomizeNeonPage() {
  return (
    <div>

      {/* ✅ Bannière Hero */}
      <CustomizeNeonComponent />
    </div>
  );
}

export default CustomizeNeonPage;

--------------------

Fichier: src/pages/HomePage.jsx
Code:
// src/pages/HomePage.jsx
import React from 'react';
import CollapsibleRows from '../components/CollapsibleRows';
import Carousel from '../components/Carousel/Carousel';
import BannerHero from "../components/BannerHero/BannerHero"; // ✅ Importation de la bannière
import ThreeRows from '../components/ThreeRows';
import Newsletter from '../components/Newsletter';
import ImageWithText from '../components/ImageWithText'


function HomePage() {
  return (
    <div>

      {/* ✅ Bannière Hero */}
      <BannerHero />
      {/* ✅ Ajout du Carrousel ICI */}
      <Carousel />
      {/* Multi-row ex. */}
      <ThreeRows />

      {/* Collapsible content */}
      <CollapsibleRows />

      <ImageWithText />

      <Newsletter />
    </div>
  );
}

export default HomePage;

--------------------

Fichier: src/pages/ProductPage.jsx
Code:
// src/pages/ProductPage.jsx
import React from 'react';
import { useParams } from 'react-router-dom';
import { getShopProducts } from '../services/dataService';

function ProductPage() {
  const { id } = useParams();
  const products = getShopProducts();
  const product = products.find(p => p.id === Number(id));

  if (!product) {
    return <div>Produit introuvable</div>;
  }

  return (
    <div style={{ textAlign: 'center' }}>
      <h2>{product.name}</h2>
      <img src={product.image} alt={product.name} style={{ width: '200px' }} />
      <p>{product.price}</p>
      <button>Ajouter au panier</button>
    </div>
  );
}

export default ProductPage;

--------------------

Fichier: src/pages/ShopPage.jsx
Code:
// src/pages/ShopPage.jsx
import React, { useEffect, useState } from 'react';
import { getShopProducts } from '../services/dataService';
import { Link } from 'react-router-dom';
import '../scss/ShopPage.scss'; // SCSS dédié

function ShopPage() {
  const [products, setProducts] = useState([]);

  useEffect(() => {
    const data = getShopProducts();
    setProducts(data);
  }, []);

  return (
    <div className="shop-page">
      <h2>Nos Néons Prêts à l’Emploi</h2>
      <div className="shop-grid">
        {products.map(product => (
          <div className="shop-item" key={product.id}>
            <h3>{product.name}</h3>
            <p className="price">Prix: {product.price} €</p>
            <button>Ajouter au panier</button>
            <Link to={`/product/${product.id}`} className="detail-link">Voir le produit</Link>


            {/* Optionnel : lien vers un ProductPage */}
            {/* <Link to={`/product/${product.id}`} className="detail-link">Détails</Link> */}
          </div>
        ))}
      </div>
    </div>
  );
}

export default ShopPage;

--------------------

Fichier: src/reportWebVitals.js
Code:
const reportWebVitals = onPerfEntry => {
  if (onPerfEntry && onPerfEntry instanceof Function) {
    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {
      getCLS(onPerfEntry);
      getFID(onPerfEntry);
      getFCP(onPerfEntry);
      getLCP(onPerfEntry);
      getTTFB(onPerfEntry);
    });
  }
};

export default reportWebVitals;

--------------------

Dossier: src/scss

Fichier: src/scss/App.scss
Code:
/* 1) Reset / base */
/*@import 'reset'; // ou la reset inline
/* 2) Variables / mixins */
@import 'variables';
@import 'buttons';
/* 3) Composants communs */
@import 'header';
@import 'footer';
@import 'collapsible';
@import 'image-text';
@import 'newsletter';
@import 'cart';

/* 4) Global overrides */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}


// Ajout d'une font global
body {
  font-family: 'Arial', sans-serif;
  background-color: #f8f9fa;
  color: #333;
}

--------------------

Fichier: src/scss/Idea.scss
Code:
// src/components/Idea/Idea.scss
.idea-page {
    max-width: 700px;
    margin: 40px auto;
    font-family: Arial, sans-serif;
  
    h2 {
      text-align: center;
      color: #0B1741;
      margin-bottom: 20px;
    }
  
    .idea-form {
      display: flex;
      flex-direction: column;
      gap: 10px;
  
      label {
        font-weight: bold;
      }
  
      input, textarea {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 8px;
      }
  
      button {
        align-self: flex-start;
        background: #0B1741;
        color: #fff;
        border: none;
        padding: 8px 16px;
        border-radius: 6px;
        cursor: pointer;
  
        &:hover {
          background: #162A64;
        }
      }
    }
  }
  
--------------------

Fichier: src/scss/ShopPage.scss
Code:
/* src/scss/ShopPage.scss */

.shop-page {
    max-width: 1000px;
    margin: 40px auto;
    padding: 0 20px;
    font-family: Arial, sans-serif;
  
    h2 {
      text-align: center;
      margin-bottom: 30px;
      color: #0B1741;
      font-size: 2rem;
    }
  
    .shop-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
      gap: 20px;
    }
  
    .shop-item {
      background: #fff;
      border: 1px solid #ddd;
      border-radius: 8px;
      padding: 20px;
      text-align: center;
  
      h3 {
        margin: 0 0 10px;
        color: #333;
      }
  
      .price {
        margin-bottom: 10px;
        color: #e53935;
        font-weight: bold;
      }
  
      button {
        background-color: #0B1741;
        color: #fff;
        border: none;
        border-radius: 5px;
        padding: 8px 16px;
        cursor: pointer;
        font-size: 1rem;
  
        &:hover {
          background-color: #162A64;
        }
      }
  
      .detail-link {
        display: inline-block;
        margin-top: 10px;
        color: #007bff;
        text-decoration: underline;
  
        &:hover {
          text-decoration: none;
        }
      }
    }
  }
  
--------------------

Fichier: src/scss/ThreeRows.scss
Code:
.three-rows {
    display: flex;
    justify-content: space-around;
    margin-top: 40px;
  
    div {
      width: 30%;
      background: #fff;
      padding: 20px;
      border-radius: 8px;
      text-align: center;
  
      h3 {
        font-size: 1.5rem;
        margin-bottom: 10px;
      }
  
      p {
        font-size: 1.1rem;
        color: #333;
      }
    }
  }
  
--------------------

Fichier: src/scss/_admin-dashboard.scss
Code:
/* src/scss/_admin-dashboard.scss */

.admin-dashboard {
    padding: 20px;
    max-width: 900px;
    margin: 40px auto;
    font-family: Arial, sans-serif;
  
    h2 {
      color: #0B1741;
      margin-bottom: 20px;
      text-align: center;
    }
  
    .logout-btn {
      background: #e53935;
      color: #fff;
      border: none;
      padding: 8px 16px;
      float: right;
      cursor: pointer;
      border-radius: 5px;
  
      &:hover {
        background: #b71c1c;
      }
    }
  
    .admin-section {
      margin-top: 60px;
  
      h3 {
        margin-bottom: 15px;
      }
  
      .admin-form {
        display: flex;
        gap: 10px;
        margin-bottom: 15px;
  
        input {
          flex: 1;
          padding: 8px;
          border: 1px solid #ccc;
          border-radius: 4px;
        }
  
        button {
          background: #0B1741;
          color: #fff;
          border: none;
          padding: 8px 16px;
          border-radius: 4px;
          cursor: pointer;
  
          &:hover {
            background: #162A64;
          }
        }
      }
  
      .product-list, .font-list, .color-list {
        list-style: none;
        padding: 0;
  
        li {
          margin-bottom: 10px;
          img {
            margin-left: 10px;
            vertical-align: middle;
          }
          button {
            margin-left: 10px;
            background: #e53935;
            color: #fff;
            border: none;
            padding: 5px 10px;
            cursor: pointer;
            border-radius: 4px;
            &:hover {
              background: #b71c1c;
            }
          }
        }
      }
    }
  }
  
--------------------

Fichier: src/scss/_admin-login.scss
Code:
/* src/scss/_admin-login.scss */

.admin-login {
    max-width: 400px;
    margin: 50px auto;
    text-align: center;
    font-family: Arial, sans-serif;
  
    h2 {
      color: #0B1741;
      margin-bottom: 20px;
    }
  
    form {
      display: flex;
      flex-direction: column;
      gap: 10px;
  
      input {
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
      }
  
      button {
        background: #0B1741;
        color: #fff;
        border: none;
        border-radius: 4px;
        padding: 10px;
        cursor: pointer;
        &:hover {
          background: #162A64;
        }
      }
    }
  }
  
--------------------

Fichier: src/scss/_admin.scss
Code:
// src/scss/_admin.scss

.admin-dashboard {
    max-width: 800px;
    margin: 0 auto;
    padding: 20px;
    font-family: Arial, sans-serif;
  
    h2 {
      text-align: center;
      margin-bottom: 30px;
    }
  
    .admin-section {
      background: #f8f8f8;
      padding: 20px;
      margin-bottom: 20px;
      border-radius: 8px;
  
      h3 {
        margin-bottom: 15px;
        color: #333;
      }
  
      .admin-form {
        display: flex;
        gap: 10px;
        margin-bottom: 15px;
  
        input {
          padding: 8px;
          border: 1px solid #ccc;
          border-radius: 4px;
          flex: 1;
        }
  
        button {
          background: #0B1741;
          color: #fff;
          border: none;
          padding: 10px 15px;
          border-radius: 4px;
          cursor: pointer;
  
          &:hover {
            background: #162A64;
          }
        }
      }
  
      .admin-list {
        list-style: none;
        padding: 0;
  
        li {
          background: #fff;
          margin-bottom: 5px;
          padding: 10px;
          border: 1px solid #ddd;
          border-radius: 4px;
          display: flex;
          justify-content: space-between;
          align-items: center;
  
          button {
            background: #e53935;
            color: #fff;
            border: none;
            border-radius: 4px;
            padding: 5px 10px;
            cursor: pointer;
  
            &:hover {
              background: #c62828;
            }
          }
        }
      }
    }
  }
  
--------------------

Fichier: src/scss/_buttons.scss
Code:
@import 'variables';

.button {
  display: inline-block;
  padding: 10px 20px;
  font-size: 16px;
  font-weight: bold;
  color: #fff;
  background: #0B1741;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: all 0.3s ease-in-out;

  &:hover {
    background: #162A64;
    transform: scale(1.05);
  }

  &:active {
    background: #09122B;
    transform: scale(0.98);
  }
}


--------------------

Fichier: src/scss/_cart.scss
Code:
// src/scss/_cart.scss
.cart-page {
  max-width: 900px;
  margin: auto;
  padding: 40px;
  background: #f4f6fb;
  font-family: Arial, sans-serif;

  .cart-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;

    h2 {
      font-size: 32px;
      font-weight: bold;
    }

    a {
      text-decoration: none;
      color: #555;
      transition: color 0.3s;
      &:hover {
        color: #222;
      }
    }
  }

  .cart-table {
    border-top: 1px solid #ddd;
    border-bottom: 1px solid #ddd;

    .cart-row {
      display: grid;
      grid-template-columns: 2fr 1fr 1fr;
      padding: 15px 0;
      align-items: center;
      border-bottom: 1px solid #ddd;

      &.cart-header-row {
        color: #999;
        font-size: 14px;
      }

      .product-info {
        display: flex;
        flex-direction: column;

        .product-name {
          font-weight: bold;
          color: #0b1741;
        }

        .product-price {
          color: #888;
        }
      }

      .quantity-control {
        display: flex;
        align-items: center;
        gap: 8px;

        button {
          width: 30px;
          height: 30px;
          border: 1px solid #ddd;
          border-radius: 20px;
          cursor: pointer;
          background: transparent;
        }

        .remove-item {
          border: none;
          background: transparent;
          cursor: pointer;
        }
      }

      .product-total {
        font-weight: bold;
        text-align: right;
      }
    }
  }

  .cart-summary {
    margin-top: 30px;
    text-align: right;

    p {
      font-size: 16px;
      font-weight: bold;
      margin-bottom: 10px;
    }

    .small-note {
      font-size: 14px;
      color: #888;
      margin-bottom: 20px;
    }

    .checkout-btn {
      background-color: #4f78f4;
      color: #fff;
      border: none;
      padding: 10px 30px;
      border-radius: 25px;
      font-size: 16px;
      cursor: pointer;
      transition: background 0.3s;

      &:hover {
        background-color: #3964e6;
      }
    }
  }

  .empty-cart {
    text-align: center;
    font-size: 18px;
    color: #888;
  }
}

--------------------

Fichier: src/scss/_checkout.scss
Code:
/* src/scss/_checkout.scss */

.checkout-page {
    max-width: 800px;
    margin: 40px auto;
    font-family: Arial, sans-serif;
  
    h2 {
      text-align: center;
      color: #0B1741;
      margin-bottom: 20px;
    }
  
    .checkout-form {
      background: #fff;
      border: 1px solid #ddd;
      border-radius: 6px;
      padding: 20px;
  
      label {
        display: block;
        margin: 10px 0 5px;
      }
  
      input {
        width: 100%;
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
      }
  
      button {
        margin-top: 15px;
        background: #0B1741;
        color: #fff;
        border: none;
        border-radius: 6px;
        padding: 10px 20px;
        cursor: pointer;
  
        &:hover {
          background: #162A64;
        }
      }
    }
  }
  
--------------------

Fichier: src/scss/_collapsible.scss
Code:
/* src/scss/_collapsible.scss */
.studio-collapsible-section {
  max-width: 700px;
  margin: auto;
  font-family: "Arial", sans-serif;
  padding: 20px;

  h2 {
    text-align: center;
    font-size: 2.5rem;
    font-weight: bold;
    margin-bottom: 30px; // Augmente cette valeur pour plus d'espace
  }
}

.studio-collapsible-row {
  border-bottom: 1px solid #E0E0E0;
  padding: 15px 0;
  cursor: pointer;
  transition: background 0.3s ease-in-out;

  &:hover {
    background: #F5F5F5;
  }

  &.open {
    .studio-collapsible-title {
      font-weight: bold;
      color: #0B1741;
    }
  }
}

.studio-collapsible-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  font-size: 18px;
  color: #333;
}

.studio-collapsible-icon {
  font-size: 20px;
  color: #0B1741;
  margin-right: 10px;
}

.studio-arrow {
  font-size: 16px;
  color: #aaa;
  transition: transform 0.3s;
}

.studio-collapsible-content {
  max-height: 0;
  overflow: hidden;
  transition: max-height 0.5s ease-in-out, opacity 0.3s ease-in-out;
  opacity: 0;
  text-align: center;
  padding: 0 20px;

  &.open {
    opacity: 1;
    padding: 15px 20px;
  }
}

--------------------

Fichier: src/scss/_contact.scss
Code:
.contact-page {
    max-width: 700px;
    margin: 40px auto;
    font-family: Arial, sans-serif;
  
    h2 {
      text-align: center;
      color: #0B1741;
      margin-bottom: 20px;
    }
  
    .contact-form {
      display: flex;
      flex-direction: column;
      gap: 10px;
  
      label {
        font-weight: bold;
      }
  
      input, textarea {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 8px;
      }
  
      button {
        align-self: flex-start;
        background: #0B1741;
        color: #fff;
        border: none;
        padding: 8px 16px;
        border-radius: 6px;
        cursor: pointer;
  
        &:hover {
          background: #162A64;
        }
      }
    }
  }
  
--------------------

Fichier: src/scss/_customize-neon.scss
Code:
// src/scss/_customize-neon.scss

.customize-neon {
    max-width: 600px; // Centrage de la page
    margin: 20px auto;
    font-family: Arial, sans-serif;
    padding: 20px;
  
    h2 {
      text-align: center;
      margin-bottom: 15px;
      font-size: 2rem;
      color: #0B1741;
    }
  
    // ✅ Aperçu en dessous du titre
    .customize-preview {
      display: flex;
      justify-content: center;
      align-items: center;
      margin-bottom: 20px;
  
      .preview-box {
        padding: 20px 30px 10px; // Réduit l'espace en bas
        text-align: center;
        min-height: 75px;
        min-width: 100%;
        background: #202020;
        border-radius: 10px;
        
  
        .preview-text {
          font-size: 2rem;
          text-shadow: 0 0 5px #fff, 0 0 10px #fff;
        }
      }
    }
  
    // ✅ Formulaire sous l'aperçu
    .customize-form {
      display: flex;
      flex-direction: column;
      width: 100%;
      padding: 20px;
      background: #f8f8f8;
      border-radius: 8px;
  
      label {
        margin: 10px 0 5px 0;
        font-weight: bold;
        color: #333;
      }
  
      select,
      input {
        padding: 10px;
        border-radius: 4px;
        border: 1px solid #ccc;
        margin-bottom: 10px;
        width: 100%;
      }
  
      .price {
        margin-top: 10px;
        font-weight: bold;
        font-size: 1.4rem;
        text-align: center;
        color: #0B1741;
      }
  
      button {
        margin-top: 15px;
        padding: 12px;
        background-color: #0B1741;
        color: #fff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background 0.3s;
  
        &:hover {
          background-color: #162A64;
        }
      }
    }
  }
  
--------------------

Fichier: src/scss/_footer.scss
Code:
// src/scss/_footer.scss
.footer {
    background-color: #0B1741;
    color: white;
    padding: 20px;
    text-align: center;
  
    a {
      color: #FFD700;
      text-decoration: none;
      &:hover {
        text-decoration: underline;
      }
    }
  }
  
--------------------

Fichier: src/scss/_header.scss
Code:
// src/scss/_header.scss
.header {
    background: #0B1741;
    color: #fff;
    padding: 10px 20px;
  
    display: flex;
    align-items: center;
    justify-content: space-between;
  
    a {
      color: #fff;
      text-decoration: none;
      font-weight: bold;
  
      &:hover {
        text-decoration: underline;
      }
    }
  
    .logo {
      font-size: 24px;
    }
  
    .nav-links {
      display: flex;
      gap: 15px;
  
      a {
        font-size: 16px;
        &:hover {
          color: #FFD700;
        }
      }
    }
  }
  
--------------------

Fichier: src/scss/_image-text.scss
Code:
.image-with-text {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: 40px;
  background: #fff;
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);

  &__img {
    width: 200px;
    margin-right: 20px;
    border-radius: 8px;
    transition: transform 0.3s ease-in-out;

    &:hover {
      transform: scale(1.05);
    }
  }

  div {
    h3 {
      font-size: 20px;
      color: #0B1741;
      margin-bottom: 10px;
    }

    p {
      font-size: 16px;
      color: #333;
      margin-bottom: 15px;
    }

    .button {
      @extend .button; // ✅ Extension du bouton global
    }
  }
}

--------------------

Fichier: src/scss/_newsletter.scss
Code:
@import 'variables';
@import 'buttons'; // Assurez-vous que ce fichier est bien importé avant d'utiliser @extend .button

.newsletter-section {
    text-align: center;
    background: #0B1741;
    color: #fff;
    padding: 40px;

    h2 {
        font-size: 24px;
        margin-bottom: 10px;
    }

    p {
        font-size: 16px;
        margin-bottom: 20px;
    }

    input {
        padding: 10px;
        width: 200px;
        border: none;
        border-radius: $border-radius;
        margin-right: 10px;
    }

    button {
        @extend .button !optional; // Utilisation de !optional pour éviter l'erreur si .button n'est pas trouvé
    }
}

--------------------

Fichier: src/scss/_product.scss
Code:
/* src/scss/_product.scss */

.product-page {
    max-width: 600px;
    margin: 40px auto;
    font-family: Arial, sans-serif;
    text-align: center;
  
    h2 {
      margin-bottom: 20px;
      color: #0B1741;
      font-size: 1.8rem;
    }
  
    img {
      max-width: 300px;
      margin-bottom: 15px;
    }
  
    .price {
      margin-bottom: 15px;
      font-weight: bold;
      color: #e53935;
    }
  
    button {
      background: #0B1741;
      color: #fff;
      padding: 10px 20px;
      border-radius: 6px;
      border: none;
      cursor: pointer;
  
      &:hover {
        background: #162A64;
      }
    }
  
    .back-link {
      display: inline-block;
      margin-top: 15px;
      text-decoration: underline;
      color: #333;
      &:hover {
        color: #0B1741;
      }
    }
  }
  
--------------------

Fichier: src/scss/_variables.scss
Code:
// Couleurs principales
$primary-color: #007bff;
$secondary-color: #f8f9fa;
$text-color: #333;
$background-light: #f8f9fa; // <-- Cette variable doit être définie
// Bordures et animations
$border-radius: 8px;
$transition-speed: 0.3s;

--------------------

Fichier: src/scss/main.scss
Code:
@import 'variables';
@import 'buttons';
@import 'collapsible';
@import 'rows';
@import 'image-text';
@import "checkout";
@import "contact";

--------------------

Fichier: src/scss/mixins.scss
Code:
// src/scss/mixins.scss
@mixin example-mixin {
    font-weight: bold;
    text-transform: uppercase;
  }
  
--------------------

Fichier: src/secret.js
Code:
// src/secret.js
export const ADMIN_PASSWORD = "secret123";

--------------------

Dossier: src/services

Fichier: src/services/dataService.js
Code:
// src/services/dataService.js

import policesJSON from '../data/polices.json';
import colorsJSON from '../data/colors.json';
import pricingJSON from '../data/pricingRules.json';
import shopJSON from '../data/shopProducts.json';

// On duplique en variable JS qu'on peut modifier.
let policesData = [...policesJSON];
let colorsData = [...colorsJSON];
let pricingData = { ...pricingJSON };
let shopProducts = [...shopJSON];

// ----- FONCTIONS DE LECTURE ----- //
export function getPolices() {
  return policesData;
}
export function getColors() {
  return colorsData;
}
export function getPricingRules() {
  return pricingData;
}
export function getShopProducts() {
  return shopProducts;
}

// ----- FONCTIONS D'ÉCRITURE (SIMULATION) ----- //
export function savePolices(updatedPolices) {
  policesData = updatedPolices;
}
export function saveColors(updatedColors) {
  colorsData = updatedColors;
}
export function savePricing(updatedPricing) {
  pricingData = updatedPricing;
}
export function saveShopProducts(updatedShop) {
  shopProducts = updatedShop;
}

--------------------

Fichier: src/services/productService.js
Code:
// src/services/productService.js

// Mocks : on stocke en localStorage (ou dans un fichier .json si c'était Node)
const PRODUCT_KEY = 'neons-data';

export function loadProducts() {
  const raw = localStorage.getItem(PRODUCT_KEY);
  if (raw) {
    return JSON.parse(raw);
  }
  // Valeurs par défaut s'il n'y a rien
  return [
    { id: 1, name: "Néon Rouge", price: "129€", image: "https://picsum.photos/200/300?red" },
    { id: 2, name: "Néon Bleu", price: "149€", image: "https://picsum.photos/200/300?blue" },
  ];
}

export function saveProducts(products) {
  localStorage.setItem(PRODUCT_KEY, JSON.stringify(products));
}

--------------------

Fichier: src/setupTests.js
Code:
// jest-dom adds custom jest matchers for asserting on DOM nodes.
// allows you to do things like:
// expect(element).toHaveTextContent(/react/i)
// learn more: https://github.com/testing-library/jest-dom
import '@testing-library/jest-dom';

--------------------
